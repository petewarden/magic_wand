// Generated using `flatc --js schema.fbs --gen-mutable`
// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var tflite = tflite || {};

/**
 * @enum {number}
 */
tflite.TensorType = {
  FLOAT32: 0,
  FLOAT16: 1,
  INT32: 2,
  UINT8: 3,
  INT64: 4,
  STRING: 5,
  BOOL: 6,
  INT16: 7,
  COMPLEX64: 8,
  INT8: 9,
  FLOAT64: 10,
  COMPLEX128: 11
};

/**
 * @enum {string}
 */
tflite.TensorTypeName = {
  '0': 'FLOAT32',
  '1': 'FLOAT16',
  '2': 'INT32',
  '3': 'UINT8',
  '4': 'INT64',
  '5': 'STRING',
  '6': 'BOOL',
  '7': 'INT16',
  '8': 'COMPLEX64',
  '9': 'INT8',
  '10': 'FLOAT64',
  '11': 'COMPLEX128'
};

/**
 * @enum {number}
 */
tflite.QuantizationDetails = {
  NONE: 0,
  CustomQuantization: 1
};

/**
 * @enum {string}
 */
tflite.QuantizationDetailsName = {
  '0': 'NONE',
  '1': 'CustomQuantization'
};

/**
 * @enum {number}
 */
tflite.DimensionType = {
  DENSE: 0,
  SPARSE_CSR: 1
};

/**
 * @enum {string}
 */
tflite.DimensionTypeName = {
  '0': 'DENSE',
  '1': 'SPARSE_CSR'
};

/**
 * @enum {number}
 */
tflite.SparseIndexVector = {
  NONE: 0,
  Int32Vector: 1,
  Uint16Vector: 2,
  Uint8Vector: 3
};

/**
 * @enum {string}
 */
tflite.SparseIndexVectorName = {
  '0': 'NONE',
  '1': 'Int32Vector',
  '2': 'Uint16Vector',
  '3': 'Uint8Vector'
};

/**
 * @enum {number}
 */
tflite.BuiltinOperator = {
  ADD: 0,
  AVERAGE_POOL_2D: 1,
  CONCATENATION: 2,
  CONV_2D: 3,
  DEPTHWISE_CONV_2D: 4,
  DEPTH_TO_SPACE: 5,
  DEQUANTIZE: 6,
  EMBEDDING_LOOKUP: 7,
  FLOOR: 8,
  FULLY_CONNECTED: 9,
  HASHTABLE_LOOKUP: 10,
  L2_NORMALIZATION: 11,
  L2_POOL_2D: 12,
  LOCAL_RESPONSE_NORMALIZATION: 13,
  LOGISTIC: 14,
  LSH_PROJECTION: 15,
  LSTM: 16,
  MAX_POOL_2D: 17,
  MUL: 18,
  RELU: 19,
  RELU_N1_TO_1: 20,
  RELU6: 21,
  RESHAPE: 22,
  RESIZE_BILINEAR: 23,
  RNN: 24,
  SOFTMAX: 25,
  SPACE_TO_DEPTH: 26,
  SVDF: 27,
  TANH: 28,
  CONCAT_EMBEDDINGS: 29,
  SKIP_GRAM: 30,
  CALL: 31,
  CUSTOM: 32,
  EMBEDDING_LOOKUP_SPARSE: 33,
  PAD: 34,
  UNIDIRECTIONAL_SEQUENCE_RNN: 35,
  GATHER: 36,
  BATCH_TO_SPACE_ND: 37,
  SPACE_TO_BATCH_ND: 38,
  TRANSPOSE: 39,
  MEAN: 40,
  SUB: 41,
  DIV: 42,
  SQUEEZE: 43,
  UNIDIRECTIONAL_SEQUENCE_LSTM: 44,
  STRIDED_SLICE: 45,
  BIDIRECTIONAL_SEQUENCE_RNN: 46,
  EXP: 47,
  TOPK_V2: 48,
  SPLIT: 49,
  LOG_SOFTMAX: 50,
  DELEGATE: 51,
  BIDIRECTIONAL_SEQUENCE_LSTM: 52,
  CAST: 53,
  PRELU: 54,
  MAXIMUM: 55,
  ARG_MAX: 56,
  MINIMUM: 57,
  LESS: 58,
  NEG: 59,
  PADV2: 60,
  GREATER: 61,
  GREATER_EQUAL: 62,
  LESS_EQUAL: 63,
  SELECT: 64,
  SLICE: 65,
  SIN: 66,
  TRANSPOSE_CONV: 67,
  SPARSE_TO_DENSE: 68,
  TILE: 69,
  EXPAND_DIMS: 70,
  EQUAL: 71,
  NOT_EQUAL: 72,
  LOG: 73,
  SUM: 74,
  SQRT: 75,
  RSQRT: 76,
  SHAPE: 77,
  POW: 78,
  ARG_MIN: 79,
  FAKE_QUANT: 80,
  REDUCE_PROD: 81,
  REDUCE_MAX: 82,
  PACK: 83,
  LOGICAL_OR: 84,
  ONE_HOT: 85,
  LOGICAL_AND: 86,
  LOGICAL_NOT: 87,
  UNPACK: 88,
  REDUCE_MIN: 89,
  FLOOR_DIV: 90,
  REDUCE_ANY: 91,
  SQUARE: 92,
  ZEROS_LIKE: 93,
  FILL: 94,
  FLOOR_MOD: 95,
  RANGE: 96,
  RESIZE_NEAREST_NEIGHBOR: 97,
  LEAKY_RELU: 98,
  SQUARED_DIFFERENCE: 99,
  MIRROR_PAD: 100,
  ABS: 101,
  SPLIT_V: 102,
  UNIQUE: 103,
  CEIL: 104,
  REVERSE_V2: 105,
  ADD_N: 106,
  GATHER_ND: 107,
  COS: 108,
  WHERE: 109,
  RANK: 110,
  ELU: 111,
  REVERSE_SEQUENCE: 112,
  MATRIX_DIAG: 113,
  QUANTIZE: 114,
  MATRIX_SET_DIAG: 115,
  ROUND: 116,
  HARD_SWISH: 117,
  IF: 118,
  WHILE: 119,
  NON_MAX_SUPPRESSION_V4: 120,
  NON_MAX_SUPPRESSION_V5: 121,
  SCATTER_ND: 122,
  SELECT_V2: 123,
  DENSIFY: 124,
  SEGMENT_SUM: 125,
  BATCH_MATMUL: 126
};

/**
 * @enum {string}
 */
tflite.BuiltinOperatorName = {
  '0': 'ADD',
  '1': 'AVERAGE_POOL_2D',
  '2': 'CONCATENATION',
  '3': 'CONV_2D',
  '4': 'DEPTHWISE_CONV_2D',
  '5': 'DEPTH_TO_SPACE',
  '6': 'DEQUANTIZE',
  '7': 'EMBEDDING_LOOKUP',
  '8': 'FLOOR',
  '9': 'FULLY_CONNECTED',
  '10': 'HASHTABLE_LOOKUP',
  '11': 'L2_NORMALIZATION',
  '12': 'L2_POOL_2D',
  '13': 'LOCAL_RESPONSE_NORMALIZATION',
  '14': 'LOGISTIC',
  '15': 'LSH_PROJECTION',
  '16': 'LSTM',
  '17': 'MAX_POOL_2D',
  '18': 'MUL',
  '19': 'RELU',
  '20': 'RELU_N1_TO_1',
  '21': 'RELU6',
  '22': 'RESHAPE',
  '23': 'RESIZE_BILINEAR',
  '24': 'RNN',
  '25': 'SOFTMAX',
  '26': 'SPACE_TO_DEPTH',
  '27': 'SVDF',
  '28': 'TANH',
  '29': 'CONCAT_EMBEDDINGS',
  '30': 'SKIP_GRAM',
  '31': 'CALL',
  '32': 'CUSTOM',
  '33': 'EMBEDDING_LOOKUP_SPARSE',
  '34': 'PAD',
  '35': 'UNIDIRECTIONAL_SEQUENCE_RNN',
  '36': 'GATHER',
  '37': 'BATCH_TO_SPACE_ND',
  '38': 'SPACE_TO_BATCH_ND',
  '39': 'TRANSPOSE',
  '40': 'MEAN',
  '41': 'SUB',
  '42': 'DIV',
  '43': 'SQUEEZE',
  '44': 'UNIDIRECTIONAL_SEQUENCE_LSTM',
  '45': 'STRIDED_SLICE',
  '46': 'BIDIRECTIONAL_SEQUENCE_RNN',
  '47': 'EXP',
  '48': 'TOPK_V2',
  '49': 'SPLIT',
  '50': 'LOG_SOFTMAX',
  '51': 'DELEGATE',
  '52': 'BIDIRECTIONAL_SEQUENCE_LSTM',
  '53': 'CAST',
  '54': 'PRELU',
  '55': 'MAXIMUM',
  '56': 'ARG_MAX',
  '57': 'MINIMUM',
  '58': 'LESS',
  '59': 'NEG',
  '60': 'PADV2',
  '61': 'GREATER',
  '62': 'GREATER_EQUAL',
  '63': 'LESS_EQUAL',
  '64': 'SELECT',
  '65': 'SLICE',
  '66': 'SIN',
  '67': 'TRANSPOSE_CONV',
  '68': 'SPARSE_TO_DENSE',
  '69': 'TILE',
  '70': 'EXPAND_DIMS',
  '71': 'EQUAL',
  '72': 'NOT_EQUAL',
  '73': 'LOG',
  '74': 'SUM',
  '75': 'SQRT',
  '76': 'RSQRT',
  '77': 'SHAPE',
  '78': 'POW',
  '79': 'ARG_MIN',
  '80': 'FAKE_QUANT',
  '81': 'REDUCE_PROD',
  '82': 'REDUCE_MAX',
  '83': 'PACK',
  '84': 'LOGICAL_OR',
  '85': 'ONE_HOT',
  '86': 'LOGICAL_AND',
  '87': 'LOGICAL_NOT',
  '88': 'UNPACK',
  '89': 'REDUCE_MIN',
  '90': 'FLOOR_DIV',
  '91': 'REDUCE_ANY',
  '92': 'SQUARE',
  '93': 'ZEROS_LIKE',
  '94': 'FILL',
  '95': 'FLOOR_MOD',
  '96': 'RANGE',
  '97': 'RESIZE_NEAREST_NEIGHBOR',
  '98': 'LEAKY_RELU',
  '99': 'SQUARED_DIFFERENCE',
  '100': 'MIRROR_PAD',
  '101': 'ABS',
  '102': 'SPLIT_V',
  '103': 'UNIQUE',
  '104': 'CEIL',
  '105': 'REVERSE_V2',
  '106': 'ADD_N',
  '107': 'GATHER_ND',
  '108': 'COS',
  '109': 'WHERE',
  '110': 'RANK',
  '111': 'ELU',
  '112': 'REVERSE_SEQUENCE',
  '113': 'MATRIX_DIAG',
  '114': 'QUANTIZE',
  '115': 'MATRIX_SET_DIAG',
  '116': 'ROUND',
  '117': 'HARD_SWISH',
  '118': 'IF',
  '119': 'WHILE',
  '120': 'NON_MAX_SUPPRESSION_V4',
  '121': 'NON_MAX_SUPPRESSION_V5',
  '122': 'SCATTER_ND',
  '123': 'SELECT_V2',
  '124': 'DENSIFY',
  '125': 'SEGMENT_SUM',
  '126': 'BATCH_MATMUL'
};

/**
 * @enum {number}
 */
tflite.BuiltinOptions = {
  NONE: 0,
  Conv2DOptions: 1,
  DepthwiseConv2DOptions: 2,
  ConcatEmbeddingsOptions: 3,
  LSHProjectionOptions: 4,
  Pool2DOptions: 5,
  SVDFOptions: 6,
  RNNOptions: 7,
  FullyConnectedOptions: 8,
  SoftmaxOptions: 9,
  ConcatenationOptions: 10,
  AddOptions: 11,
  L2NormOptions: 12,
  LocalResponseNormalizationOptions: 13,
  LSTMOptions: 14,
  ResizeBilinearOptions: 15,
  CallOptions: 16,
  ReshapeOptions: 17,
  SkipGramOptions: 18,
  SpaceToDepthOptions: 19,
  EmbeddingLookupSparseOptions: 20,
  MulOptions: 21,
  PadOptions: 22,
  GatherOptions: 23,
  BatchToSpaceNDOptions: 24,
  SpaceToBatchNDOptions: 25,
  TransposeOptions: 26,
  ReducerOptions: 27,
  SubOptions: 28,
  DivOptions: 29,
  SqueezeOptions: 30,
  SequenceRNNOptions: 31,
  StridedSliceOptions: 32,
  ExpOptions: 33,
  TopKV2Options: 34,
  SplitOptions: 35,
  LogSoftmaxOptions: 36,
  CastOptions: 37,
  DequantizeOptions: 38,
  MaximumMinimumOptions: 39,
  ArgMaxOptions: 40,
  LessOptions: 41,
  NegOptions: 42,
  PadV2Options: 43,
  GreaterOptions: 44,
  GreaterEqualOptions: 45,
  LessEqualOptions: 46,
  SelectOptions: 47,
  SliceOptions: 48,
  TransposeConvOptions: 49,
  SparseToDenseOptions: 50,
  TileOptions: 51,
  ExpandDimsOptions: 52,
  EqualOptions: 53,
  NotEqualOptions: 54,
  ShapeOptions: 55,
  PowOptions: 56,
  ArgMinOptions: 57,
  FakeQuantOptions: 58,
  PackOptions: 59,
  LogicalOrOptions: 60,
  OneHotOptions: 61,
  LogicalAndOptions: 62,
  LogicalNotOptions: 63,
  UnpackOptions: 64,
  FloorDivOptions: 65,
  SquareOptions: 66,
  ZerosLikeOptions: 67,
  FillOptions: 68,
  BidirectionalSequenceLSTMOptions: 69,
  BidirectionalSequenceRNNOptions: 70,
  UnidirectionalSequenceLSTMOptions: 71,
  FloorModOptions: 72,
  RangeOptions: 73,
  ResizeNearestNeighborOptions: 74,
  LeakyReluOptions: 75,
  SquaredDifferenceOptions: 76,
  MirrorPadOptions: 77,
  AbsOptions: 78,
  SplitVOptions: 79,
  UniqueOptions: 80,
  ReverseV2Options: 81,
  AddNOptions: 82,
  GatherNdOptions: 83,
  CosOptions: 84,
  WhereOptions: 85,
  RankOptions: 86,
  ReverseSequenceOptions: 87,
  MatrixDiagOptions: 88,
  QuantizeOptions: 89,
  MatrixSetDiagOptions: 90,
  HardSwishOptions: 91,
  IfOptions: 92,
  WhileOptions: 93,
  DepthToSpaceOptions: 94,
  NonMaxSuppressionV4Options: 95,
  NonMaxSuppressionV5Options: 96,
  ScatterNdOptions: 97,
  SelectV2Options: 98,
  DensifyOptions: 99,
  SegmentSumOptions: 100,
  BatchMatMulOptions: 101
};

/**
 * @enum {string}
 */
tflite.BuiltinOptionsName = {
  '0': 'NONE',
  '1': 'Conv2DOptions',
  '2': 'DepthwiseConv2DOptions',
  '3': 'ConcatEmbeddingsOptions',
  '4': 'LSHProjectionOptions',
  '5': 'Pool2DOptions',
  '6': 'SVDFOptions',
  '7': 'RNNOptions',
  '8': 'FullyConnectedOptions',
  '9': 'SoftmaxOptions',
  '10': 'ConcatenationOptions',
  '11': 'AddOptions',
  '12': 'L2NormOptions',
  '13': 'LocalResponseNormalizationOptions',
  '14': 'LSTMOptions',
  '15': 'ResizeBilinearOptions',
  '16': 'CallOptions',
  '17': 'ReshapeOptions',
  '18': 'SkipGramOptions',
  '19': 'SpaceToDepthOptions',
  '20': 'EmbeddingLookupSparseOptions',
  '21': 'MulOptions',
  '22': 'PadOptions',
  '23': 'GatherOptions',
  '24': 'BatchToSpaceNDOptions',
  '25': 'SpaceToBatchNDOptions',
  '26': 'TransposeOptions',
  '27': 'ReducerOptions',
  '28': 'SubOptions',
  '29': 'DivOptions',
  '30': 'SqueezeOptions',
  '31': 'SequenceRNNOptions',
  '32': 'StridedSliceOptions',
  '33': 'ExpOptions',
  '34': 'TopKV2Options',
  '35': 'SplitOptions',
  '36': 'LogSoftmaxOptions',
  '37': 'CastOptions',
  '38': 'DequantizeOptions',
  '39': 'MaximumMinimumOptions',
  '40': 'ArgMaxOptions',
  '41': 'LessOptions',
  '42': 'NegOptions',
  '43': 'PadV2Options',
  '44': 'GreaterOptions',
  '45': 'GreaterEqualOptions',
  '46': 'LessEqualOptions',
  '47': 'SelectOptions',
  '48': 'SliceOptions',
  '49': 'TransposeConvOptions',
  '50': 'SparseToDenseOptions',
  '51': 'TileOptions',
  '52': 'ExpandDimsOptions',
  '53': 'EqualOptions',
  '54': 'NotEqualOptions',
  '55': 'ShapeOptions',
  '56': 'PowOptions',
  '57': 'ArgMinOptions',
  '58': 'FakeQuantOptions',
  '59': 'PackOptions',
  '60': 'LogicalOrOptions',
  '61': 'OneHotOptions',
  '62': 'LogicalAndOptions',
  '63': 'LogicalNotOptions',
  '64': 'UnpackOptions',
  '65': 'FloorDivOptions',
  '66': 'SquareOptions',
  '67': 'ZerosLikeOptions',
  '68': 'FillOptions',
  '69': 'BidirectionalSequenceLSTMOptions',
  '70': 'BidirectionalSequenceRNNOptions',
  '71': 'UnidirectionalSequenceLSTMOptions',
  '72': 'FloorModOptions',
  '73': 'RangeOptions',
  '74': 'ResizeNearestNeighborOptions',
  '75': 'LeakyReluOptions',
  '76': 'SquaredDifferenceOptions',
  '77': 'MirrorPadOptions',
  '78': 'AbsOptions',
  '79': 'SplitVOptions',
  '80': 'UniqueOptions',
  '81': 'ReverseV2Options',
  '82': 'AddNOptions',
  '83': 'GatherNdOptions',
  '84': 'CosOptions',
  '85': 'WhereOptions',
  '86': 'RankOptions',
  '87': 'ReverseSequenceOptions',
  '88': 'MatrixDiagOptions',
  '89': 'QuantizeOptions',
  '90': 'MatrixSetDiagOptions',
  '91': 'HardSwishOptions',
  '92': 'IfOptions',
  '93': 'WhileOptions',
  '94': 'DepthToSpaceOptions',
  '95': 'NonMaxSuppressionV4Options',
  '96': 'NonMaxSuppressionV5Options',
  '97': 'ScatterNdOptions',
  '98': 'SelectV2Options',
  '99': 'DensifyOptions',
  '100': 'SegmentSumOptions',
  '101': 'BatchMatMulOptions'
};

/**
 * @enum {number}
 */
tflite.Padding = {
  SAME: 0,
  VALID: 1
};

/**
 * @enum {string}
 */
tflite.PaddingName = {
  '0': 'SAME',
  '1': 'VALID'
};

/**
 * @enum {number}
 */
tflite.ActivationFunctionType = {
  NONE: 0,
  RELU: 1,
  RELU_N1_TO_1: 2,
  RELU6: 3,
  TANH: 4,
  SIGN_BIT: 5
};

/**
 * @enum {string}
 */
tflite.ActivationFunctionTypeName = {
  '0': 'NONE',
  '1': 'RELU',
  '2': 'RELU_N1_TO_1',
  '3': 'RELU6',
  '4': 'TANH',
  '5': 'SIGN_BIT'
};

/**
 * @enum {number}
 */
tflite.LSHProjectionType = {
  UNKNOWN: 0,
  SPARSE: 1,
  DENSE: 2
};

/**
 * @enum {string}
 */
tflite.LSHProjectionTypeName = {
  '0': 'UNKNOWN',
  '1': 'SPARSE',
  '2': 'DENSE'
};

/**
 * @enum {number}
 */
tflite.FullyConnectedOptionsWeightsFormat = {
  DEFAULT: 0,
  SHUFFLED4x16INT8: 1
};

/**
 * @enum {string}
 */
tflite.FullyConnectedOptionsWeightsFormatName = {
  '0': 'DEFAULT',
  '1': 'SHUFFLED4x16INT8'
};

/**
 * @enum {number}
 */
tflite.LSTMKernelType = {
  FULL: 0,
  BASIC: 1
};

/**
 * @enum {string}
 */
tflite.LSTMKernelTypeName = {
  '0': 'FULL',
  '1': 'BASIC'
};

/**
 * @enum {number}
 */
tflite.CombinerType = {
  SUM: 0,
  MEAN: 1,
  SQRTN: 2
};

/**
 * @enum {string}
 */
tflite.CombinerTypeName = {
  '0': 'SUM',
  '1': 'MEAN',
  '2': 'SQRTN'
};

/**
 * @enum {number}
 */
tflite.MirrorPadMode = {
  REFLECT: 0,
  SYMMETRIC: 1
};

/**
 * @enum {string}
 */
tflite.MirrorPadModeName = {
  '0': 'REFLECT',
  '1': 'SYMMETRIC'
};

/**
 * @enum {number}
 */
tflite.CustomOptionsFormat = {
  FLEXBUFFERS: 0
};

/**
 * @enum {string}
 */
tflite.CustomOptionsFormatName = {
  '0': 'FLEXBUFFERS'
};

/**
 * @constructor
 */
tflite.CustomQuantization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.CustomQuantization}
 */
tflite.CustomQuantization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CustomQuantization=} obj
 * @returns {tflite.CustomQuantization}
 */
tflite.CustomQuantization.getRootAsCustomQuantization = function(bb, obj) {
  return (obj || new tflite.CustomQuantization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CustomQuantization=} obj
 * @returns {tflite.CustomQuantization}
 */
tflite.CustomQuantization.getSizePrefixedRootAsCustomQuantization = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.CustomQuantization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.CustomQuantization.prototype.custom = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
tflite.CustomQuantization.prototype.customLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
tflite.CustomQuantization.prototype.customArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.CustomQuantization.startCustomQuantization = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} customOffset
 */
tflite.CustomQuantization.addCustom = function(builder, customOffset) {
  builder.addFieldOffset(0, customOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.CustomQuantization.createCustomVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.CustomQuantization.startCustomVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.CustomQuantization.endCustomQuantization = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} customOffset
 * @returns {flatbuffers.Offset}
 */
tflite.CustomQuantization.createCustomQuantization = function(builder, customOffset) {
  tflite.CustomQuantization.startCustomQuantization(builder);
  tflite.CustomQuantization.addCustom(builder, customOffset);
  return tflite.CustomQuantization.endCustomQuantization(builder);
}

/**
 * @constructor
 */
tflite.QuantizationParameters = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.QuantizationParameters}
 */
tflite.QuantizationParameters.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.QuantizationParameters=} obj
 * @returns {tflite.QuantizationParameters}
 */
tflite.QuantizationParameters.getRootAsQuantizationParameters = function(bb, obj) {
  return (obj || new tflite.QuantizationParameters).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.QuantizationParameters=} obj
 * @returns {tflite.QuantizationParameters}
 */
tflite.QuantizationParameters.getSizePrefixedRootAsQuantizationParameters = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.QuantizationParameters).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.min = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.minLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
tflite.QuantizationParameters.prototype.minArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.max = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.maxLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
tflite.QuantizationParameters.prototype.maxArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.scale = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.scaleLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Float32Array}
 */
tflite.QuantizationParameters.prototype.scaleArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {flatbuffers.Long}
 */
tflite.QuantizationParameters.prototype.zeroPoint = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt64(this.bb.__vector(this.bb_pos + offset) + index * 8) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.zeroPointLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {tflite.QuantizationDetails}
 */
tflite.QuantizationParameters.prototype.detailsType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {tflite.QuantizationDetails} */ (this.bb.readUint8(this.bb_pos + offset)) : tflite.QuantizationDetails.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
tflite.QuantizationParameters.prototype.details = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {number}
 */
tflite.QuantizationParameters.prototype.quantizedDimension = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.QuantizationParameters.prototype.mutate_quantized_dimension = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.QuantizationParameters.startQuantizationParameters = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} minOffset
 */
tflite.QuantizationParameters.addMin = function(builder, minOffset) {
  builder.addFieldOffset(0, minOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.createMinVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.QuantizationParameters.startMinVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} maxOffset
 */
tflite.QuantizationParameters.addMax = function(builder, maxOffset) {
  builder.addFieldOffset(1, maxOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.createMaxVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.QuantizationParameters.startMaxVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} scaleOffset
 */
tflite.QuantizationParameters.addScale = function(builder, scaleOffset) {
  builder.addFieldOffset(2, scaleOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.createScaleVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addFloat32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.QuantizationParameters.startScaleVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} zeroPointOffset
 */
tflite.QuantizationParameters.addZeroPoint = function(builder, zeroPointOffset) {
  builder.addFieldOffset(3, zeroPointOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Long>} data
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.createZeroPointVector = function(builder, data) {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.QuantizationParameters.startZeroPointVector = function(builder, numElems) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.QuantizationDetails} detailsType
 */
tflite.QuantizationParameters.addDetailsType = function(builder, detailsType) {
  builder.addFieldInt8(4, detailsType, tflite.QuantizationDetails.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} detailsOffset
 */
tflite.QuantizationParameters.addDetails = function(builder, detailsOffset) {
  builder.addFieldOffset(5, detailsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} quantizedDimension
 */
tflite.QuantizationParameters.addQuantizedDimension = function(builder, quantizedDimension) {
  builder.addFieldInt32(6, quantizedDimension, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.endQuantizationParameters = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} minOffset
 * @param {flatbuffers.Offset} maxOffset
 * @param {flatbuffers.Offset} scaleOffset
 * @param {flatbuffers.Offset} zeroPointOffset
 * @param {tflite.QuantizationDetails} detailsType
 * @param {flatbuffers.Offset} detailsOffset
 * @param {number} quantizedDimension
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizationParameters.createQuantizationParameters = function(builder, minOffset, maxOffset, scaleOffset, zeroPointOffset, detailsType, detailsOffset, quantizedDimension) {
  tflite.QuantizationParameters.startQuantizationParameters(builder);
  tflite.QuantizationParameters.addMin(builder, minOffset);
  tflite.QuantizationParameters.addMax(builder, maxOffset);
  tflite.QuantizationParameters.addScale(builder, scaleOffset);
  tflite.QuantizationParameters.addZeroPoint(builder, zeroPointOffset);
  tflite.QuantizationParameters.addDetailsType(builder, detailsType);
  tflite.QuantizationParameters.addDetails(builder, detailsOffset);
  tflite.QuantizationParameters.addQuantizedDimension(builder, quantizedDimension);
  return tflite.QuantizationParameters.endQuantizationParameters(builder);
}

/**
 * @constructor
 */
tflite.Int32Vector = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Int32Vector}
 */
tflite.Int32Vector.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Int32Vector=} obj
 * @returns {tflite.Int32Vector}
 */
tflite.Int32Vector.getRootAsInt32Vector = function(bb, obj) {
  return (obj || new tflite.Int32Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Int32Vector=} obj
 * @returns {tflite.Int32Vector}
 */
tflite.Int32Vector.getSizePrefixedRootAsInt32Vector = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Int32Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Int32Vector.prototype.values = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Int32Vector.prototype.valuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Int32Vector.prototype.valuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Int32Vector.startInt32Vector = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 */
tflite.Int32Vector.addValues = function(builder, valuesOffset) {
  builder.addFieldOffset(0, valuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Int32Vector.createValuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Int32Vector.startValuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Int32Vector.endInt32Vector = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Int32Vector.createInt32Vector = function(builder, valuesOffset) {
  tflite.Int32Vector.startInt32Vector(builder);
  tflite.Int32Vector.addValues(builder, valuesOffset);
  return tflite.Int32Vector.endInt32Vector(builder);
}

/**
 * @constructor
 */
tflite.Uint16Vector = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Uint16Vector}
 */
tflite.Uint16Vector.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Uint16Vector=} obj
 * @returns {tflite.Uint16Vector}
 */
tflite.Uint16Vector.getRootAsUint16Vector = function(bb, obj) {
  return (obj || new tflite.Uint16Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Uint16Vector=} obj
 * @returns {tflite.Uint16Vector}
 */
tflite.Uint16Vector.getSizePrefixedRootAsUint16Vector = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Uint16Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Uint16Vector.prototype.values = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint16(this.bb.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns {number}
 */
tflite.Uint16Vector.prototype.valuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
tflite.Uint16Vector.prototype.valuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint16Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Uint16Vector.startUint16Vector = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 */
tflite.Uint16Vector.addValues = function(builder, valuesOffset) {
  builder.addFieldOffset(0, valuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Uint16Vector.createValuesVector = function(builder, data) {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Uint16Vector.startValuesVector = function(builder, numElems) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Uint16Vector.endUint16Vector = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Uint16Vector.createUint16Vector = function(builder, valuesOffset) {
  tflite.Uint16Vector.startUint16Vector(builder);
  tflite.Uint16Vector.addValues(builder, valuesOffset);
  return tflite.Uint16Vector.endUint16Vector(builder);
}

/**
 * @constructor
 */
tflite.Uint8Vector = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Uint8Vector}
 */
tflite.Uint8Vector.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Uint8Vector=} obj
 * @returns {tflite.Uint8Vector}
 */
tflite.Uint8Vector.getRootAsUint8Vector = function(bb, obj) {
  return (obj || new tflite.Uint8Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Uint8Vector=} obj
 * @returns {tflite.Uint8Vector}
 */
tflite.Uint8Vector.getSizePrefixedRootAsUint8Vector = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Uint8Vector).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Uint8Vector.prototype.values = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
tflite.Uint8Vector.prototype.valuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
tflite.Uint8Vector.prototype.valuesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Uint8Vector.startUint8Vector = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 */
tflite.Uint8Vector.addValues = function(builder, valuesOffset) {
  builder.addFieldOffset(0, valuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Uint8Vector.createValuesVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Uint8Vector.startValuesVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Uint8Vector.endUint8Vector = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} valuesOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Uint8Vector.createUint8Vector = function(builder, valuesOffset) {
  tflite.Uint8Vector.startUint8Vector(builder);
  tflite.Uint8Vector.addValues(builder, valuesOffset);
  return tflite.Uint8Vector.endUint8Vector(builder);
}

/**
 * @constructor
 */
tflite.DimensionMetadata = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DimensionMetadata}
 */
tflite.DimensionMetadata.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DimensionMetadata=} obj
 * @returns {tflite.DimensionMetadata}
 */
tflite.DimensionMetadata.getRootAsDimensionMetadata = function(bb, obj) {
  return (obj || new tflite.DimensionMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DimensionMetadata=} obj
 * @returns {tflite.DimensionMetadata}
 */
tflite.DimensionMetadata.getSizePrefixedRootAsDimensionMetadata = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DimensionMetadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.DimensionType}
 */
tflite.DimensionMetadata.prototype.format = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.DimensionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.DimensionType.DENSE;
};

/**
 * @param {tflite.DimensionType} value
 * @returns {boolean}
 */
tflite.DimensionMetadata.prototype.mutate_format = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DimensionMetadata.prototype.denseSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DimensionMetadata.prototype.mutate_dense_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.SparseIndexVector}
 */
tflite.DimensionMetadata.prototype.arraySegmentsType = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {tflite.SparseIndexVector} */ (this.bb.readUint8(this.bb_pos + offset)) : tflite.SparseIndexVector.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
tflite.DimensionMetadata.prototype.arraySegments = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @returns {tflite.SparseIndexVector}
 */
tflite.DimensionMetadata.prototype.arrayIndicesType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {tflite.SparseIndexVector} */ (this.bb.readUint8(this.bb_pos + offset)) : tflite.SparseIndexVector.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
tflite.DimensionMetadata.prototype.arrayIndices = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DimensionMetadata.startDimensionMetadata = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.DimensionType} format
 */
tflite.DimensionMetadata.addFormat = function(builder, format) {
  builder.addFieldInt8(0, format, tflite.DimensionType.DENSE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} denseSize
 */
tflite.DimensionMetadata.addDenseSize = function(builder, denseSize) {
  builder.addFieldInt32(1, denseSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.SparseIndexVector} arraySegmentsType
 */
tflite.DimensionMetadata.addArraySegmentsType = function(builder, arraySegmentsType) {
  builder.addFieldInt8(2, arraySegmentsType, tflite.SparseIndexVector.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} arraySegmentsOffset
 */
tflite.DimensionMetadata.addArraySegments = function(builder, arraySegmentsOffset) {
  builder.addFieldOffset(3, arraySegmentsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.SparseIndexVector} arrayIndicesType
 */
tflite.DimensionMetadata.addArrayIndicesType = function(builder, arrayIndicesType) {
  builder.addFieldInt8(4, arrayIndicesType, tflite.SparseIndexVector.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} arrayIndicesOffset
 */
tflite.DimensionMetadata.addArrayIndices = function(builder, arrayIndicesOffset) {
  builder.addFieldOffset(5, arrayIndicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DimensionMetadata.endDimensionMetadata = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.DimensionType} format
 * @param {number} denseSize
 * @param {tflite.SparseIndexVector} arraySegmentsType
 * @param {flatbuffers.Offset} arraySegmentsOffset
 * @param {tflite.SparseIndexVector} arrayIndicesType
 * @param {flatbuffers.Offset} arrayIndicesOffset
 * @returns {flatbuffers.Offset}
 */
tflite.DimensionMetadata.createDimensionMetadata = function(builder, format, denseSize, arraySegmentsType, arraySegmentsOffset, arrayIndicesType, arrayIndicesOffset) {
  tflite.DimensionMetadata.startDimensionMetadata(builder);
  tflite.DimensionMetadata.addFormat(builder, format);
  tflite.DimensionMetadata.addDenseSize(builder, denseSize);
  tflite.DimensionMetadata.addArraySegmentsType(builder, arraySegmentsType);
  tflite.DimensionMetadata.addArraySegments(builder, arraySegmentsOffset);
  tflite.DimensionMetadata.addArrayIndicesType(builder, arrayIndicesType);
  tflite.DimensionMetadata.addArrayIndices(builder, arrayIndicesOffset);
  return tflite.DimensionMetadata.endDimensionMetadata(builder);
}

/**
 * @constructor
 */
tflite.SparsityParameters = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SparsityParameters}
 */
tflite.SparsityParameters.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SparsityParameters=} obj
 * @returns {tflite.SparsityParameters}
 */
tflite.SparsityParameters.getRootAsSparsityParameters = function(bb, obj) {
  return (obj || new tflite.SparsityParameters).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SparsityParameters=} obj
 * @returns {tflite.SparsityParameters}
 */
tflite.SparsityParameters.getSizePrefixedRootAsSparsityParameters = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SparsityParameters).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.SparsityParameters.prototype.traversalOrder = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.SparsityParameters.prototype.traversalOrderLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.SparsityParameters.prototype.traversalOrderArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.SparsityParameters.prototype.blockMap = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.SparsityParameters.prototype.blockMapLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.SparsityParameters.prototype.blockMapArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {tflite.DimensionMetadata=} obj
 * @returns {tflite.DimensionMetadata}
 */
tflite.SparsityParameters.prototype.dimMetadata = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new tflite.DimensionMetadata).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.SparsityParameters.prototype.dimMetadataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SparsityParameters.startSparsityParameters = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} traversalOrderOffset
 */
tflite.SparsityParameters.addTraversalOrder = function(builder, traversalOrderOffset) {
  builder.addFieldOffset(0, traversalOrderOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SparsityParameters.createTraversalOrderVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SparsityParameters.startTraversalOrderVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} blockMapOffset
 */
tflite.SparsityParameters.addBlockMap = function(builder, blockMapOffset) {
  builder.addFieldOffset(1, blockMapOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SparsityParameters.createBlockMapVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SparsityParameters.startBlockMapVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dimMetadataOffset
 */
tflite.SparsityParameters.addDimMetadata = function(builder, dimMetadataOffset) {
  builder.addFieldOffset(2, dimMetadataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SparsityParameters.createDimMetadataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SparsityParameters.startDimMetadataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SparsityParameters.endSparsityParameters = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} traversalOrderOffset
 * @param {flatbuffers.Offset} blockMapOffset
 * @param {flatbuffers.Offset} dimMetadataOffset
 * @returns {flatbuffers.Offset}
 */
tflite.SparsityParameters.createSparsityParameters = function(builder, traversalOrderOffset, blockMapOffset, dimMetadataOffset) {
  tflite.SparsityParameters.startSparsityParameters(builder);
  tflite.SparsityParameters.addTraversalOrder(builder, traversalOrderOffset);
  tflite.SparsityParameters.addBlockMap(builder, blockMapOffset);
  tflite.SparsityParameters.addDimMetadata(builder, dimMetadataOffset);
  return tflite.SparsityParameters.endSparsityParameters(builder);
}

/**
 * @constructor
 */
tflite.Tensor = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Tensor}
 */
tflite.Tensor.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Tensor=} obj
 * @returns {tflite.Tensor}
 */
tflite.Tensor.getRootAsTensor = function(bb, obj) {
  return (obj || new tflite.Tensor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Tensor=} obj
 * @returns {tflite.Tensor}
 */
tflite.Tensor.getSizePrefixedRootAsTensor = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Tensor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Tensor.prototype.shape = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Tensor.prototype.shapeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Tensor.prototype.shapeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {tflite.TensorType}
 */
tflite.Tensor.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.Tensor.prototype.mutate_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Tensor.prototype.buffer = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Tensor.prototype.mutate_buffer = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
tflite.Tensor.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {tflite.QuantizationParameters=} obj
 * @returns {tflite.QuantizationParameters|null}
 */
tflite.Tensor.prototype.quantization = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new tflite.QuantizationParameters).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @returns {boolean}
 */
tflite.Tensor.prototype.isVariable = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.Tensor.prototype.mutate_is_variable = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {tflite.SparsityParameters=} obj
 * @returns {tflite.SparsityParameters|null}
 */
tflite.Tensor.prototype.sparsity = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new tflite.SparsityParameters).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Tensor.prototype.shapeSignature = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Tensor.prototype.shapeSignatureLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Tensor.prototype.shapeSignatureArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Tensor.startTensor = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} shapeOffset
 */
tflite.Tensor.addShape = function(builder, shapeOffset) {
  builder.addFieldOffset(0, shapeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Tensor.createShapeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Tensor.startShapeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} type
 */
tflite.Tensor.addType = function(builder, type) {
  builder.addFieldInt8(1, type, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} buffer
 */
tflite.Tensor.addBuffer = function(builder, buffer) {
  builder.addFieldInt32(2, buffer, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
tflite.Tensor.addName = function(builder, nameOffset) {
  builder.addFieldOffset(3, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} quantizationOffset
 */
tflite.Tensor.addQuantization = function(builder, quantizationOffset) {
  builder.addFieldOffset(4, quantizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} isVariable
 */
tflite.Tensor.addIsVariable = function(builder, isVariable) {
  builder.addFieldInt8(5, +isVariable, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} sparsityOffset
 */
tflite.Tensor.addSparsity = function(builder, sparsityOffset) {
  builder.addFieldOffset(6, sparsityOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} shapeSignatureOffset
 */
tflite.Tensor.addShapeSignature = function(builder, shapeSignatureOffset) {
  builder.addFieldOffset(7, shapeSignatureOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Tensor.createShapeSignatureVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Tensor.startShapeSignatureVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Tensor.endTensor = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} shapeOffset
 * @param {tflite.TensorType} type
 * @param {number} buffer
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} quantizationOffset
 * @param {boolean} isVariable
 * @param {flatbuffers.Offset} sparsityOffset
 * @param {flatbuffers.Offset} shapeSignatureOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Tensor.createTensor = function(builder, shapeOffset, type, buffer, nameOffset, quantizationOffset, isVariable, sparsityOffset, shapeSignatureOffset) {
  tflite.Tensor.startTensor(builder);
  tflite.Tensor.addShape(builder, shapeOffset);
  tflite.Tensor.addType(builder, type);
  tflite.Tensor.addBuffer(builder, buffer);
  tflite.Tensor.addName(builder, nameOffset);
  tflite.Tensor.addQuantization(builder, quantizationOffset);
  tflite.Tensor.addIsVariable(builder, isVariable);
  tflite.Tensor.addSparsity(builder, sparsityOffset);
  tflite.Tensor.addShapeSignature(builder, shapeSignatureOffset);
  return tflite.Tensor.endTensor(builder);
}

/**
 * @constructor
 */
tflite.Conv2DOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Conv2DOptions}
 */
tflite.Conv2DOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Conv2DOptions=} obj
 * @returns {tflite.Conv2DOptions}
 */
tflite.Conv2DOptions.getRootAsConv2DOptions = function(bb, obj) {
  return (obj || new tflite.Conv2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Conv2DOptions=} obj
 * @returns {tflite.Conv2DOptions}
 */
tflite.Conv2DOptions.getSizePrefixedRootAsConv2DOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Conv2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.Padding}
 */
tflite.Conv2DOptions.prototype.padding = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.Padding} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.Padding.SAME;
};

/**
 * @param {tflite.Padding} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_padding = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Conv2DOptions.prototype.strideW = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_stride_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Conv2DOptions.prototype.strideH = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_stride_h = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.Conv2DOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Conv2DOptions.prototype.dilationWFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_dilation_w_factor = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Conv2DOptions.prototype.dilationHFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Conv2DOptions.prototype.mutate_dilation_h_factor = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Conv2DOptions.startConv2DOptions = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 */
tflite.Conv2DOptions.addPadding = function(builder, padding) {
  builder.addFieldInt8(0, padding, tflite.Padding.SAME);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideW
 */
tflite.Conv2DOptions.addStrideW = function(builder, strideW) {
  builder.addFieldInt32(1, strideW, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideH
 */
tflite.Conv2DOptions.addStrideH = function(builder, strideH) {
  builder.addFieldInt32(2, strideH, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.Conv2DOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(3, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationWFactor
 */
tflite.Conv2DOptions.addDilationWFactor = function(builder, dilationWFactor) {
  builder.addFieldInt32(4, dilationWFactor, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationHFactor
 */
tflite.Conv2DOptions.addDilationHFactor = function(builder, dilationHFactor) {
  builder.addFieldInt32(5, dilationHFactor, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Conv2DOptions.endConv2DOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 * @param {number} strideW
 * @param {number} strideH
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {number} dilationWFactor
 * @param {number} dilationHFactor
 * @returns {flatbuffers.Offset}
 */
tflite.Conv2DOptions.createConv2DOptions = function(builder, padding, strideW, strideH, fusedActivationFunction, dilationWFactor, dilationHFactor) {
  tflite.Conv2DOptions.startConv2DOptions(builder);
  tflite.Conv2DOptions.addPadding(builder, padding);
  tflite.Conv2DOptions.addStrideW(builder, strideW);
  tflite.Conv2DOptions.addStrideH(builder, strideH);
  tflite.Conv2DOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.Conv2DOptions.addDilationWFactor(builder, dilationWFactor);
  tflite.Conv2DOptions.addDilationHFactor(builder, dilationHFactor);
  return tflite.Conv2DOptions.endConv2DOptions(builder);
}

/**
 * @constructor
 */
tflite.Pool2DOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Pool2DOptions}
 */
tflite.Pool2DOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Pool2DOptions=} obj
 * @returns {tflite.Pool2DOptions}
 */
tflite.Pool2DOptions.getRootAsPool2DOptions = function(bb, obj) {
  return (obj || new tflite.Pool2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Pool2DOptions=} obj
 * @returns {tflite.Pool2DOptions}
 */
tflite.Pool2DOptions.getSizePrefixedRootAsPool2DOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Pool2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.Padding}
 */
tflite.Pool2DOptions.prototype.padding = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.Padding} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.Padding.SAME;
};

/**
 * @param {tflite.Padding} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_padding = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Pool2DOptions.prototype.strideW = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_stride_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Pool2DOptions.prototype.strideH = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_stride_h = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Pool2DOptions.prototype.filterWidth = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_filter_width = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.Pool2DOptions.prototype.filterHeight = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_filter_height = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.Pool2DOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.Pool2DOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Pool2DOptions.startPool2DOptions = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 */
tflite.Pool2DOptions.addPadding = function(builder, padding) {
  builder.addFieldInt8(0, padding, tflite.Padding.SAME);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideW
 */
tflite.Pool2DOptions.addStrideW = function(builder, strideW) {
  builder.addFieldInt32(1, strideW, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideH
 */
tflite.Pool2DOptions.addStrideH = function(builder, strideH) {
  builder.addFieldInt32(2, strideH, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} filterWidth
 */
tflite.Pool2DOptions.addFilterWidth = function(builder, filterWidth) {
  builder.addFieldInt32(3, filterWidth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} filterHeight
 */
tflite.Pool2DOptions.addFilterHeight = function(builder, filterHeight) {
  builder.addFieldInt32(4, filterHeight, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.Pool2DOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(5, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Pool2DOptions.endPool2DOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 * @param {number} strideW
 * @param {number} strideH
 * @param {number} filterWidth
 * @param {number} filterHeight
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @returns {flatbuffers.Offset}
 */
tflite.Pool2DOptions.createPool2DOptions = function(builder, padding, strideW, strideH, filterWidth, filterHeight, fusedActivationFunction) {
  tflite.Pool2DOptions.startPool2DOptions(builder);
  tflite.Pool2DOptions.addPadding(builder, padding);
  tflite.Pool2DOptions.addStrideW(builder, strideW);
  tflite.Pool2DOptions.addStrideH(builder, strideH);
  tflite.Pool2DOptions.addFilterWidth(builder, filterWidth);
  tflite.Pool2DOptions.addFilterHeight(builder, filterHeight);
  tflite.Pool2DOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return tflite.Pool2DOptions.endPool2DOptions(builder);
}

/**
 * @constructor
 */
tflite.DepthwiseConv2DOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DepthwiseConv2DOptions}
 */
tflite.DepthwiseConv2DOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DepthwiseConv2DOptions=} obj
 * @returns {tflite.DepthwiseConv2DOptions}
 */
tflite.DepthwiseConv2DOptions.getRootAsDepthwiseConv2DOptions = function(bb, obj) {
  return (obj || new tflite.DepthwiseConv2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DepthwiseConv2DOptions=} obj
 * @returns {tflite.DepthwiseConv2DOptions}
 */
tflite.DepthwiseConv2DOptions.getSizePrefixedRootAsDepthwiseConv2DOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DepthwiseConv2DOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.Padding}
 */
tflite.DepthwiseConv2DOptions.prototype.padding = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.Padding} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.Padding.SAME;
};

/**
 * @param {tflite.Padding} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_padding = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DepthwiseConv2DOptions.prototype.strideW = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_stride_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DepthwiseConv2DOptions.prototype.strideH = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_stride_h = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DepthwiseConv2DOptions.prototype.depthMultiplier = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_depth_multiplier = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.DepthwiseConv2DOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DepthwiseConv2DOptions.prototype.dilationWFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_dilation_w_factor = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.DepthwiseConv2DOptions.prototype.dilationHFactor = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthwiseConv2DOptions.prototype.mutate_dilation_h_factor = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DepthwiseConv2DOptions.startDepthwiseConv2DOptions = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 */
tflite.DepthwiseConv2DOptions.addPadding = function(builder, padding) {
  builder.addFieldInt8(0, padding, tflite.Padding.SAME);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideW
 */
tflite.DepthwiseConv2DOptions.addStrideW = function(builder, strideW) {
  builder.addFieldInt32(1, strideW, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideH
 */
tflite.DepthwiseConv2DOptions.addStrideH = function(builder, strideH) {
  builder.addFieldInt32(2, strideH, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} depthMultiplier
 */
tflite.DepthwiseConv2DOptions.addDepthMultiplier = function(builder, depthMultiplier) {
  builder.addFieldInt32(3, depthMultiplier, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.DepthwiseConv2DOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(4, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationWFactor
 */
tflite.DepthwiseConv2DOptions.addDilationWFactor = function(builder, dilationWFactor) {
  builder.addFieldInt32(5, dilationWFactor, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dilationHFactor
 */
tflite.DepthwiseConv2DOptions.addDilationHFactor = function(builder, dilationHFactor) {
  builder.addFieldInt32(6, dilationHFactor, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DepthwiseConv2DOptions.endDepthwiseConv2DOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 * @param {number} strideW
 * @param {number} strideH
 * @param {number} depthMultiplier
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {number} dilationWFactor
 * @param {number} dilationHFactor
 * @returns {flatbuffers.Offset}
 */
tflite.DepthwiseConv2DOptions.createDepthwiseConv2DOptions = function(builder, padding, strideW, strideH, depthMultiplier, fusedActivationFunction, dilationWFactor, dilationHFactor) {
  tflite.DepthwiseConv2DOptions.startDepthwiseConv2DOptions(builder);
  tflite.DepthwiseConv2DOptions.addPadding(builder, padding);
  tflite.DepthwiseConv2DOptions.addStrideW(builder, strideW);
  tflite.DepthwiseConv2DOptions.addStrideH(builder, strideH);
  tflite.DepthwiseConv2DOptions.addDepthMultiplier(builder, depthMultiplier);
  tflite.DepthwiseConv2DOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.DepthwiseConv2DOptions.addDilationWFactor(builder, dilationWFactor);
  tflite.DepthwiseConv2DOptions.addDilationHFactor(builder, dilationHFactor);
  return tflite.DepthwiseConv2DOptions.endDepthwiseConv2DOptions(builder);
}

/**
 * @constructor
 */
tflite.ConcatEmbeddingsOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ConcatEmbeddingsOptions}
 */
tflite.ConcatEmbeddingsOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ConcatEmbeddingsOptions=} obj
 * @returns {tflite.ConcatEmbeddingsOptions}
 */
tflite.ConcatEmbeddingsOptions.getRootAsConcatEmbeddingsOptions = function(bb, obj) {
  return (obj || new tflite.ConcatEmbeddingsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ConcatEmbeddingsOptions=} obj
 * @returns {tflite.ConcatEmbeddingsOptions}
 */
tflite.ConcatEmbeddingsOptions.getSizePrefixedRootAsConcatEmbeddingsOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ConcatEmbeddingsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.ConcatEmbeddingsOptions.prototype.numChannels = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.ConcatEmbeddingsOptions.prototype.mutate_num_channels = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.ConcatEmbeddingsOptions.prototype.numColumnsPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.ConcatEmbeddingsOptions.prototype.numColumnsPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.ConcatEmbeddingsOptions.prototype.numColumnsPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.ConcatEmbeddingsOptions.prototype.embeddingDimPerChannel = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.ConcatEmbeddingsOptions.prototype.embeddingDimPerChannelLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.ConcatEmbeddingsOptions.prototype.embeddingDimPerChannelArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ConcatEmbeddingsOptions.startConcatEmbeddingsOptions = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numChannels
 */
tflite.ConcatEmbeddingsOptions.addNumChannels = function(builder, numChannels) {
  builder.addFieldInt32(0, numChannels, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} numColumnsPerChannelOffset
 */
tflite.ConcatEmbeddingsOptions.addNumColumnsPerChannel = function(builder, numColumnsPerChannelOffset) {
  builder.addFieldOffset(1, numColumnsPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatEmbeddingsOptions.createNumColumnsPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.ConcatEmbeddingsOptions.startNumColumnsPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} embeddingDimPerChannelOffset
 */
tflite.ConcatEmbeddingsOptions.addEmbeddingDimPerChannel = function(builder, embeddingDimPerChannelOffset) {
  builder.addFieldOffset(2, embeddingDimPerChannelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatEmbeddingsOptions.createEmbeddingDimPerChannelVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.ConcatEmbeddingsOptions.startEmbeddingDimPerChannelVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatEmbeddingsOptions.endConcatEmbeddingsOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numChannels
 * @param {flatbuffers.Offset} numColumnsPerChannelOffset
 * @param {flatbuffers.Offset} embeddingDimPerChannelOffset
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatEmbeddingsOptions.createConcatEmbeddingsOptions = function(builder, numChannels, numColumnsPerChannelOffset, embeddingDimPerChannelOffset) {
  tflite.ConcatEmbeddingsOptions.startConcatEmbeddingsOptions(builder);
  tflite.ConcatEmbeddingsOptions.addNumChannels(builder, numChannels);
  tflite.ConcatEmbeddingsOptions.addNumColumnsPerChannel(builder, numColumnsPerChannelOffset);
  tflite.ConcatEmbeddingsOptions.addEmbeddingDimPerChannel(builder, embeddingDimPerChannelOffset);
  return tflite.ConcatEmbeddingsOptions.endConcatEmbeddingsOptions(builder);
}

/**
 * @constructor
 */
tflite.LSHProjectionOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LSHProjectionOptions}
 */
tflite.LSHProjectionOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LSHProjectionOptions=} obj
 * @returns {tflite.LSHProjectionOptions}
 */
tflite.LSHProjectionOptions.getRootAsLSHProjectionOptions = function(bb, obj) {
  return (obj || new tflite.LSHProjectionOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LSHProjectionOptions=} obj
 * @returns {tflite.LSHProjectionOptions}
 */
tflite.LSHProjectionOptions.getSizePrefixedRootAsLSHProjectionOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LSHProjectionOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.LSHProjectionType}
 */
tflite.LSHProjectionOptions.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.LSHProjectionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.LSHProjectionType.UNKNOWN;
};

/**
 * @param {tflite.LSHProjectionType} value
 * @returns {boolean}
 */
tflite.LSHProjectionOptions.prototype.mutate_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LSHProjectionOptions.startLSHProjectionOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.LSHProjectionType} type
 */
tflite.LSHProjectionOptions.addType = function(builder, type) {
  builder.addFieldInt8(0, type, tflite.LSHProjectionType.UNKNOWN);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LSHProjectionOptions.endLSHProjectionOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.LSHProjectionType} type
 * @returns {flatbuffers.Offset}
 */
tflite.LSHProjectionOptions.createLSHProjectionOptions = function(builder, type) {
  tflite.LSHProjectionOptions.startLSHProjectionOptions(builder);
  tflite.LSHProjectionOptions.addType(builder, type);
  return tflite.LSHProjectionOptions.endLSHProjectionOptions(builder);
}

/**
 * @constructor
 */
tflite.SVDFOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SVDFOptions}
 */
tflite.SVDFOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SVDFOptions=} obj
 * @returns {tflite.SVDFOptions}
 */
tflite.SVDFOptions.getRootAsSVDFOptions = function(bb, obj) {
  return (obj || new tflite.SVDFOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SVDFOptions=} obj
 * @returns {tflite.SVDFOptions}
 */
tflite.SVDFOptions.getSizePrefixedRootAsSVDFOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SVDFOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SVDFOptions.prototype.rank = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SVDFOptions.prototype.mutate_rank = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.SVDFOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.SVDFOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.SVDFOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SVDFOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SVDFOptions.startSVDFOptions = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rank
 */
tflite.SVDFOptions.addRank = function(builder, rank) {
  builder.addFieldInt32(0, rank, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.SVDFOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(1, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.SVDFOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(2, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SVDFOptions.endSVDFOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rank
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.SVDFOptions.createSVDFOptions = function(builder, rank, fusedActivationFunction, asymmetricQuantizeInputs) {
  tflite.SVDFOptions.startSVDFOptions(builder);
  tflite.SVDFOptions.addRank(builder, rank);
  tflite.SVDFOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.SVDFOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.SVDFOptions.endSVDFOptions(builder);
}

/**
 * @constructor
 */
tflite.RNNOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.RNNOptions}
 */
tflite.RNNOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RNNOptions=} obj
 * @returns {tflite.RNNOptions}
 */
tflite.RNNOptions.getRootAsRNNOptions = function(bb, obj) {
  return (obj || new tflite.RNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RNNOptions=} obj
 * @returns {tflite.RNNOptions}
 */
tflite.RNNOptions.getSizePrefixedRootAsRNNOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.RNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.RNNOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.RNNOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.RNNOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.RNNOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.RNNOptions.startRNNOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.RNNOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.RNNOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(1, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.RNNOptions.endRNNOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.RNNOptions.createRNNOptions = function(builder, fusedActivationFunction, asymmetricQuantizeInputs) {
  tflite.RNNOptions.startRNNOptions(builder);
  tflite.RNNOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.RNNOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.RNNOptions.endRNNOptions(builder);
}

/**
 * @constructor
 */
tflite.SequenceRNNOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SequenceRNNOptions}
 */
tflite.SequenceRNNOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SequenceRNNOptions=} obj
 * @returns {tflite.SequenceRNNOptions}
 */
tflite.SequenceRNNOptions.getRootAsSequenceRNNOptions = function(bb, obj) {
  return (obj || new tflite.SequenceRNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SequenceRNNOptions=} obj
 * @returns {tflite.SequenceRNNOptions}
 */
tflite.SequenceRNNOptions.getSizePrefixedRootAsSequenceRNNOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SequenceRNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.SequenceRNNOptions.prototype.timeMajor = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SequenceRNNOptions.prototype.mutate_time_major = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.SequenceRNNOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.SequenceRNNOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.SequenceRNNOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SequenceRNNOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SequenceRNNOptions.startSequenceRNNOptions = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 */
tflite.SequenceRNNOptions.addTimeMajor = function(builder, timeMajor) {
  builder.addFieldInt8(0, +timeMajor, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.SequenceRNNOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(1, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.SequenceRNNOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(2, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SequenceRNNOptions.endSequenceRNNOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.SequenceRNNOptions.createSequenceRNNOptions = function(builder, timeMajor, fusedActivationFunction, asymmetricQuantizeInputs) {
  tflite.SequenceRNNOptions.startSequenceRNNOptions(builder);
  tflite.SequenceRNNOptions.addTimeMajor(builder, timeMajor);
  tflite.SequenceRNNOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.SequenceRNNOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.SequenceRNNOptions.endSequenceRNNOptions(builder);
}

/**
 * @constructor
 */
tflite.BidirectionalSequenceRNNOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.BidirectionalSequenceRNNOptions}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BidirectionalSequenceRNNOptions=} obj
 * @returns {tflite.BidirectionalSequenceRNNOptions}
 */
tflite.BidirectionalSequenceRNNOptions.getRootAsBidirectionalSequenceRNNOptions = function(bb, obj) {
  return (obj || new tflite.BidirectionalSequenceRNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BidirectionalSequenceRNNOptions=} obj
 * @returns {tflite.BidirectionalSequenceRNNOptions}
 */
tflite.BidirectionalSequenceRNNOptions.getSizePrefixedRootAsBidirectionalSequenceRNNOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.BidirectionalSequenceRNNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.timeMajor = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.mutate_time_major = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.mergeOutputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.mutate_merge_outputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceRNNOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.BidirectionalSequenceRNNOptions.startBidirectionalSequenceRNNOptions = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 */
tflite.BidirectionalSequenceRNNOptions.addTimeMajor = function(builder, timeMajor) {
  builder.addFieldInt8(0, +timeMajor, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.BidirectionalSequenceRNNOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(1, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} mergeOutputs
 */
tflite.BidirectionalSequenceRNNOptions.addMergeOutputs = function(builder, mergeOutputs) {
  builder.addFieldInt8(2, +mergeOutputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.BidirectionalSequenceRNNOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(3, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.BidirectionalSequenceRNNOptions.endBidirectionalSequenceRNNOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} mergeOutputs
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.BidirectionalSequenceRNNOptions.createBidirectionalSequenceRNNOptions = function(builder, timeMajor, fusedActivationFunction, mergeOutputs, asymmetricQuantizeInputs) {
  tflite.BidirectionalSequenceRNNOptions.startBidirectionalSequenceRNNOptions(builder);
  tflite.BidirectionalSequenceRNNOptions.addTimeMajor(builder, timeMajor);
  tflite.BidirectionalSequenceRNNOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.BidirectionalSequenceRNNOptions.addMergeOutputs(builder, mergeOutputs);
  tflite.BidirectionalSequenceRNNOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.BidirectionalSequenceRNNOptions.endBidirectionalSequenceRNNOptions(builder);
}

/**
 * @constructor
 */
tflite.FullyConnectedOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.FullyConnectedOptions}
 */
tflite.FullyConnectedOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FullyConnectedOptions=} obj
 * @returns {tflite.FullyConnectedOptions}
 */
tflite.FullyConnectedOptions.getRootAsFullyConnectedOptions = function(bb, obj) {
  return (obj || new tflite.FullyConnectedOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FullyConnectedOptions=} obj
 * @returns {tflite.FullyConnectedOptions}
 */
tflite.FullyConnectedOptions.getSizePrefixedRootAsFullyConnectedOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.FullyConnectedOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.FullyConnectedOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.FullyConnectedOptionsWeightsFormat}
 */
tflite.FullyConnectedOptions.prototype.weightsFormat = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.FullyConnectedOptionsWeightsFormat} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.FullyConnectedOptionsWeightsFormat.DEFAULT;
};

/**
 * @param {tflite.FullyConnectedOptionsWeightsFormat} value
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.mutate_weights_format = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.keepNumDims = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.mutate_keep_num_dims = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.FullyConnectedOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.FullyConnectedOptions.startFullyConnectedOptions = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.FullyConnectedOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.FullyConnectedOptionsWeightsFormat} weightsFormat
 */
tflite.FullyConnectedOptions.addWeightsFormat = function(builder, weightsFormat) {
  builder.addFieldInt8(1, weightsFormat, tflite.FullyConnectedOptionsWeightsFormat.DEFAULT);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} keepNumDims
 */
tflite.FullyConnectedOptions.addKeepNumDims = function(builder, keepNumDims) {
  builder.addFieldInt8(2, +keepNumDims, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.FullyConnectedOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(3, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FullyConnectedOptions.endFullyConnectedOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {tflite.FullyConnectedOptionsWeightsFormat} weightsFormat
 * @param {boolean} keepNumDims
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.FullyConnectedOptions.createFullyConnectedOptions = function(builder, fusedActivationFunction, weightsFormat, keepNumDims, asymmetricQuantizeInputs) {
  tflite.FullyConnectedOptions.startFullyConnectedOptions(builder);
  tflite.FullyConnectedOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.FullyConnectedOptions.addWeightsFormat(builder, weightsFormat);
  tflite.FullyConnectedOptions.addKeepNumDims(builder, keepNumDims);
  tflite.FullyConnectedOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.FullyConnectedOptions.endFullyConnectedOptions(builder);
}

/**
 * @constructor
 */
tflite.SoftmaxOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SoftmaxOptions}
 */
tflite.SoftmaxOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SoftmaxOptions=} obj
 * @returns {tflite.SoftmaxOptions}
 */
tflite.SoftmaxOptions.getRootAsSoftmaxOptions = function(bb, obj) {
  return (obj || new tflite.SoftmaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SoftmaxOptions=} obj
 * @returns {tflite.SoftmaxOptions}
 */
tflite.SoftmaxOptions.getSizePrefixedRootAsSoftmaxOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SoftmaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SoftmaxOptions.prototype.beta = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SoftmaxOptions.prototype.mutate_beta = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SoftmaxOptions.startSoftmaxOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beta
 */
tflite.SoftmaxOptions.addBeta = function(builder, beta) {
  builder.addFieldFloat32(0, beta, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SoftmaxOptions.endSoftmaxOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beta
 * @returns {flatbuffers.Offset}
 */
tflite.SoftmaxOptions.createSoftmaxOptions = function(builder, beta) {
  tflite.SoftmaxOptions.startSoftmaxOptions(builder);
  tflite.SoftmaxOptions.addBeta(builder, beta);
  return tflite.SoftmaxOptions.endSoftmaxOptions(builder);
}

/**
 * @constructor
 */
tflite.ConcatenationOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ConcatenationOptions}
 */
tflite.ConcatenationOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ConcatenationOptions=} obj
 * @returns {tflite.ConcatenationOptions}
 */
tflite.ConcatenationOptions.getRootAsConcatenationOptions = function(bb, obj) {
  return (obj || new tflite.ConcatenationOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ConcatenationOptions=} obj
 * @returns {tflite.ConcatenationOptions}
 */
tflite.ConcatenationOptions.getSizePrefixedRootAsConcatenationOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ConcatenationOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.ConcatenationOptions.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.ConcatenationOptions.prototype.mutate_axis = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.ConcatenationOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.ConcatenationOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ConcatenationOptions.startConcatenationOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
tflite.ConcatenationOptions.addAxis = function(builder, axis) {
  builder.addFieldInt32(0, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.ConcatenationOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(1, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatenationOptions.endConcatenationOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @returns {flatbuffers.Offset}
 */
tflite.ConcatenationOptions.createConcatenationOptions = function(builder, axis, fusedActivationFunction) {
  tflite.ConcatenationOptions.startConcatenationOptions(builder);
  tflite.ConcatenationOptions.addAxis(builder, axis);
  tflite.ConcatenationOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return tflite.ConcatenationOptions.endConcatenationOptions(builder);
}

/**
 * @constructor
 */
tflite.AddOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.AddOptions}
 */
tflite.AddOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AddOptions=} obj
 * @returns {tflite.AddOptions}
 */
tflite.AddOptions.getRootAsAddOptions = function(bb, obj) {
  return (obj || new tflite.AddOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AddOptions=} obj
 * @returns {tflite.AddOptions}
 */
tflite.AddOptions.getSizePrefixedRootAsAddOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.AddOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.AddOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.AddOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.AddOptions.prototype.potScaleInt16 = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.AddOptions.prototype.mutate_pot_scale_int16 = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.AddOptions.startAddOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.AddOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} potScaleInt16
 */
tflite.AddOptions.addPotScaleInt16 = function(builder, potScaleInt16) {
  builder.addFieldInt8(1, +potScaleInt16, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.AddOptions.endAddOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} potScaleInt16
 * @returns {flatbuffers.Offset}
 */
tflite.AddOptions.createAddOptions = function(builder, fusedActivationFunction, potScaleInt16) {
  tflite.AddOptions.startAddOptions(builder);
  tflite.AddOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.AddOptions.addPotScaleInt16(builder, potScaleInt16);
  return tflite.AddOptions.endAddOptions(builder);
}

/**
 * @constructor
 */
tflite.MulOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.MulOptions}
 */
tflite.MulOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MulOptions=} obj
 * @returns {tflite.MulOptions}
 */
tflite.MulOptions.getRootAsMulOptions = function(bb, obj) {
  return (obj || new tflite.MulOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MulOptions=} obj
 * @returns {tflite.MulOptions}
 */
tflite.MulOptions.getSizePrefixedRootAsMulOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.MulOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.MulOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.MulOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.MulOptions.startMulOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.MulOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MulOptions.endMulOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @returns {flatbuffers.Offset}
 */
tflite.MulOptions.createMulOptions = function(builder, fusedActivationFunction) {
  tflite.MulOptions.startMulOptions(builder);
  tflite.MulOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return tflite.MulOptions.endMulOptions(builder);
}

/**
 * @constructor
 */
tflite.L2NormOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.L2NormOptions}
 */
tflite.L2NormOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.L2NormOptions=} obj
 * @returns {tflite.L2NormOptions}
 */
tflite.L2NormOptions.getRootAsL2NormOptions = function(bb, obj) {
  return (obj || new tflite.L2NormOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.L2NormOptions=} obj
 * @returns {tflite.L2NormOptions}
 */
tflite.L2NormOptions.getSizePrefixedRootAsL2NormOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.L2NormOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.L2NormOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.L2NormOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.L2NormOptions.startL2NormOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.L2NormOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.L2NormOptions.endL2NormOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @returns {flatbuffers.Offset}
 */
tflite.L2NormOptions.createL2NormOptions = function(builder, fusedActivationFunction) {
  tflite.L2NormOptions.startL2NormOptions(builder);
  tflite.L2NormOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return tflite.L2NormOptions.endL2NormOptions(builder);
}

/**
 * @constructor
 */
tflite.LocalResponseNormalizationOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LocalResponseNormalizationOptions}
 */
tflite.LocalResponseNormalizationOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LocalResponseNormalizationOptions=} obj
 * @returns {tflite.LocalResponseNormalizationOptions}
 */
tflite.LocalResponseNormalizationOptions.getRootAsLocalResponseNormalizationOptions = function(bb, obj) {
  return (obj || new tflite.LocalResponseNormalizationOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LocalResponseNormalizationOptions=} obj
 * @returns {tflite.LocalResponseNormalizationOptions}
 */
tflite.LocalResponseNormalizationOptions.getSizePrefixedRootAsLocalResponseNormalizationOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LocalResponseNormalizationOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.LocalResponseNormalizationOptions.prototype.radius = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LocalResponseNormalizationOptions.prototype.mutate_radius = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.LocalResponseNormalizationOptions.prototype.bias = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LocalResponseNormalizationOptions.prototype.mutate_bias = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.LocalResponseNormalizationOptions.prototype.alpha = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LocalResponseNormalizationOptions.prototype.mutate_alpha = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.LocalResponseNormalizationOptions.prototype.beta = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LocalResponseNormalizationOptions.prototype.mutate_beta = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LocalResponseNormalizationOptions.startLocalResponseNormalizationOptions = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 */
tflite.LocalResponseNormalizationOptions.addRadius = function(builder, radius) {
  builder.addFieldInt32(0, radius, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} bias
 */
tflite.LocalResponseNormalizationOptions.addBias = function(builder, bias) {
  builder.addFieldFloat32(1, bias, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} alpha
 */
tflite.LocalResponseNormalizationOptions.addAlpha = function(builder, alpha) {
  builder.addFieldFloat32(2, alpha, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beta
 */
tflite.LocalResponseNormalizationOptions.addBeta = function(builder, beta) {
  builder.addFieldFloat32(3, beta, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LocalResponseNormalizationOptions.endLocalResponseNormalizationOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} radius
 * @param {number} bias
 * @param {number} alpha
 * @param {number} beta
 * @returns {flatbuffers.Offset}
 */
tflite.LocalResponseNormalizationOptions.createLocalResponseNormalizationOptions = function(builder, radius, bias, alpha, beta) {
  tflite.LocalResponseNormalizationOptions.startLocalResponseNormalizationOptions(builder);
  tflite.LocalResponseNormalizationOptions.addRadius(builder, radius);
  tflite.LocalResponseNormalizationOptions.addBias(builder, bias);
  tflite.LocalResponseNormalizationOptions.addAlpha(builder, alpha);
  tflite.LocalResponseNormalizationOptions.addBeta(builder, beta);
  return tflite.LocalResponseNormalizationOptions.endLocalResponseNormalizationOptions(builder);
}

/**
 * @constructor
 */
tflite.LSTMOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LSTMOptions}
 */
tflite.LSTMOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LSTMOptions=} obj
 * @returns {tflite.LSTMOptions}
 */
tflite.LSTMOptions.getRootAsLSTMOptions = function(bb, obj) {
  return (obj || new tflite.LSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LSTMOptions=} obj
 * @returns {tflite.LSTMOptions}
 */
tflite.LSTMOptions.getSizePrefixedRootAsLSTMOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.LSTMOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.LSTMOptions.prototype.cellClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.mutate_cell_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.LSTMOptions.prototype.projClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.mutate_proj_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.LSTMKernelType}
 */
tflite.LSTMOptions.prototype.kernelType = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? /** @type {tflite.LSTMKernelType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.LSTMKernelType.FULL;
};

/**
 * @param {tflite.LSTMKernelType} value
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.mutate_kernel_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.LSTMOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LSTMOptions.startLSTMOptions = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.LSTMOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} cellClip
 */
tflite.LSTMOptions.addCellClip = function(builder, cellClip) {
  builder.addFieldFloat32(1, cellClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} projClip
 */
tflite.LSTMOptions.addProjClip = function(builder, projClip) {
  builder.addFieldFloat32(2, projClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.LSTMKernelType} kernelType
 */
tflite.LSTMOptions.addKernelType = function(builder, kernelType) {
  builder.addFieldInt8(3, kernelType, tflite.LSTMKernelType.FULL);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.LSTMOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(4, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LSTMOptions.endLSTMOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {number} cellClip
 * @param {number} projClip
 * @param {tflite.LSTMKernelType} kernelType
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.LSTMOptions.createLSTMOptions = function(builder, fusedActivationFunction, cellClip, projClip, kernelType, asymmetricQuantizeInputs) {
  tflite.LSTMOptions.startLSTMOptions(builder);
  tflite.LSTMOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.LSTMOptions.addCellClip(builder, cellClip);
  tflite.LSTMOptions.addProjClip(builder, projClip);
  tflite.LSTMOptions.addKernelType(builder, kernelType);
  tflite.LSTMOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.LSTMOptions.endLSTMOptions(builder);
}

/**
 * @constructor
 */
tflite.UnidirectionalSequenceLSTMOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.UnidirectionalSequenceLSTMOptions}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UnidirectionalSequenceLSTMOptions=} obj
 * @returns {tflite.UnidirectionalSequenceLSTMOptions}
 */
tflite.UnidirectionalSequenceLSTMOptions.getRootAsUnidirectionalSequenceLSTMOptions = function(bb, obj) {
  return (obj || new tflite.UnidirectionalSequenceLSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UnidirectionalSequenceLSTMOptions=} obj
 * @returns {tflite.UnidirectionalSequenceLSTMOptions}
 */
tflite.UnidirectionalSequenceLSTMOptions.getSizePrefixedRootAsUnidirectionalSequenceLSTMOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.UnidirectionalSequenceLSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.cellClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.mutate_cell_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.projClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.mutate_proj_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.timeMajor = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.mutate_time_major = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.UnidirectionalSequenceLSTMOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.UnidirectionalSequenceLSTMOptions.startUnidirectionalSequenceLSTMOptions = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.UnidirectionalSequenceLSTMOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} cellClip
 */
tflite.UnidirectionalSequenceLSTMOptions.addCellClip = function(builder, cellClip) {
  builder.addFieldFloat32(1, cellClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} projClip
 */
tflite.UnidirectionalSequenceLSTMOptions.addProjClip = function(builder, projClip) {
  builder.addFieldFloat32(2, projClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 */
tflite.UnidirectionalSequenceLSTMOptions.addTimeMajor = function(builder, timeMajor) {
  builder.addFieldInt8(3, +timeMajor, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.UnidirectionalSequenceLSTMOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(4, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.UnidirectionalSequenceLSTMOptions.endUnidirectionalSequenceLSTMOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {number} cellClip
 * @param {number} projClip
 * @param {boolean} timeMajor
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.UnidirectionalSequenceLSTMOptions.createUnidirectionalSequenceLSTMOptions = function(builder, fusedActivationFunction, cellClip, projClip, timeMajor, asymmetricQuantizeInputs) {
  tflite.UnidirectionalSequenceLSTMOptions.startUnidirectionalSequenceLSTMOptions(builder);
  tflite.UnidirectionalSequenceLSTMOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.UnidirectionalSequenceLSTMOptions.addCellClip(builder, cellClip);
  tflite.UnidirectionalSequenceLSTMOptions.addProjClip(builder, projClip);
  tflite.UnidirectionalSequenceLSTMOptions.addTimeMajor(builder, timeMajor);
  tflite.UnidirectionalSequenceLSTMOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.UnidirectionalSequenceLSTMOptions.endUnidirectionalSequenceLSTMOptions(builder);
}

/**
 * @constructor
 */
tflite.BidirectionalSequenceLSTMOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.BidirectionalSequenceLSTMOptions}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BidirectionalSequenceLSTMOptions=} obj
 * @returns {tflite.BidirectionalSequenceLSTMOptions}
 */
tflite.BidirectionalSequenceLSTMOptions.getRootAsBidirectionalSequenceLSTMOptions = function(bb, obj) {
  return (obj || new tflite.BidirectionalSequenceLSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BidirectionalSequenceLSTMOptions=} obj
 * @returns {tflite.BidirectionalSequenceLSTMOptions}
 */
tflite.BidirectionalSequenceLSTMOptions.getSizePrefixedRootAsBidirectionalSequenceLSTMOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.BidirectionalSequenceLSTMOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.cellClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_cell_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.projClip = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_proj_clip = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mergeOutputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_merge_outputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.timeMajor = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_time_major = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.asymmetricQuantizeInputs = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BidirectionalSequenceLSTMOptions.prototype.mutate_asymmetric_quantize_inputs = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 14);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.BidirectionalSequenceLSTMOptions.startBidirectionalSequenceLSTMOptions = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.BidirectionalSequenceLSTMOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} cellClip
 */
tflite.BidirectionalSequenceLSTMOptions.addCellClip = function(builder, cellClip) {
  builder.addFieldFloat32(1, cellClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} projClip
 */
tflite.BidirectionalSequenceLSTMOptions.addProjClip = function(builder, projClip) {
  builder.addFieldFloat32(2, projClip, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} mergeOutputs
 */
tflite.BidirectionalSequenceLSTMOptions.addMergeOutputs = function(builder, mergeOutputs) {
  builder.addFieldInt8(3, +mergeOutputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} timeMajor
 */
tflite.BidirectionalSequenceLSTMOptions.addTimeMajor = function(builder, timeMajor) {
  builder.addFieldInt8(4, +timeMajor, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} asymmetricQuantizeInputs
 */
tflite.BidirectionalSequenceLSTMOptions.addAsymmetricQuantizeInputs = function(builder, asymmetricQuantizeInputs) {
  builder.addFieldInt8(5, +asymmetricQuantizeInputs, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.BidirectionalSequenceLSTMOptions.endBidirectionalSequenceLSTMOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {number} cellClip
 * @param {number} projClip
 * @param {boolean} mergeOutputs
 * @param {boolean} timeMajor
 * @param {boolean} asymmetricQuantizeInputs
 * @returns {flatbuffers.Offset}
 */
tflite.BidirectionalSequenceLSTMOptions.createBidirectionalSequenceLSTMOptions = function(builder, fusedActivationFunction, cellClip, projClip, mergeOutputs, timeMajor, asymmetricQuantizeInputs) {
  tflite.BidirectionalSequenceLSTMOptions.startBidirectionalSequenceLSTMOptions(builder);
  tflite.BidirectionalSequenceLSTMOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.BidirectionalSequenceLSTMOptions.addCellClip(builder, cellClip);
  tflite.BidirectionalSequenceLSTMOptions.addProjClip(builder, projClip);
  tflite.BidirectionalSequenceLSTMOptions.addMergeOutputs(builder, mergeOutputs);
  tflite.BidirectionalSequenceLSTMOptions.addTimeMajor(builder, timeMajor);
  tflite.BidirectionalSequenceLSTMOptions.addAsymmetricQuantizeInputs(builder, asymmetricQuantizeInputs);
  return tflite.BidirectionalSequenceLSTMOptions.endBidirectionalSequenceLSTMOptions(builder);
}

/**
 * @constructor
 */
tflite.ResizeBilinearOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ResizeBilinearOptions}
 */
tflite.ResizeBilinearOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ResizeBilinearOptions=} obj
 * @returns {tflite.ResizeBilinearOptions}
 */
tflite.ResizeBilinearOptions.getRootAsResizeBilinearOptions = function(bb, obj) {
  return (obj || new tflite.ResizeBilinearOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ResizeBilinearOptions=} obj
 * @returns {tflite.ResizeBilinearOptions}
 */
tflite.ResizeBilinearOptions.getSizePrefixedRootAsResizeBilinearOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ResizeBilinearOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.ResizeBilinearOptions.prototype.alignCorners = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.ResizeBilinearOptions.prototype.mutate_align_corners = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.ResizeBilinearOptions.prototype.halfPixelCenters = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.ResizeBilinearOptions.prototype.mutate_half_pixel_centers = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ResizeBilinearOptions.startResizeBilinearOptions = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} alignCorners
 */
tflite.ResizeBilinearOptions.addAlignCorners = function(builder, alignCorners) {
  builder.addFieldInt8(2, +alignCorners, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} halfPixelCenters
 */
tflite.ResizeBilinearOptions.addHalfPixelCenters = function(builder, halfPixelCenters) {
  builder.addFieldInt8(3, +halfPixelCenters, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ResizeBilinearOptions.endResizeBilinearOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} alignCorners
 * @param {boolean} halfPixelCenters
 * @returns {flatbuffers.Offset}
 */
tflite.ResizeBilinearOptions.createResizeBilinearOptions = function(builder, alignCorners, halfPixelCenters) {
  tflite.ResizeBilinearOptions.startResizeBilinearOptions(builder);
  tflite.ResizeBilinearOptions.addAlignCorners(builder, alignCorners);
  tflite.ResizeBilinearOptions.addHalfPixelCenters(builder, halfPixelCenters);
  return tflite.ResizeBilinearOptions.endResizeBilinearOptions(builder);
}

/**
 * @constructor
 */
tflite.ResizeNearestNeighborOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ResizeNearestNeighborOptions}
 */
tflite.ResizeNearestNeighborOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ResizeNearestNeighborOptions=} obj
 * @returns {tflite.ResizeNearestNeighborOptions}
 */
tflite.ResizeNearestNeighborOptions.getRootAsResizeNearestNeighborOptions = function(bb, obj) {
  return (obj || new tflite.ResizeNearestNeighborOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ResizeNearestNeighborOptions=} obj
 * @returns {tflite.ResizeNearestNeighborOptions}
 */
tflite.ResizeNearestNeighborOptions.getSizePrefixedRootAsResizeNearestNeighborOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ResizeNearestNeighborOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.ResizeNearestNeighborOptions.prototype.alignCorners = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.ResizeNearestNeighborOptions.prototype.mutate_align_corners = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.ResizeNearestNeighborOptions.prototype.halfPixelCenters = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.ResizeNearestNeighborOptions.prototype.mutate_half_pixel_centers = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ResizeNearestNeighborOptions.startResizeNearestNeighborOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} alignCorners
 */
tflite.ResizeNearestNeighborOptions.addAlignCorners = function(builder, alignCorners) {
  builder.addFieldInt8(0, +alignCorners, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} halfPixelCenters
 */
tflite.ResizeNearestNeighborOptions.addHalfPixelCenters = function(builder, halfPixelCenters) {
  builder.addFieldInt8(1, +halfPixelCenters, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ResizeNearestNeighborOptions.endResizeNearestNeighborOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} alignCorners
 * @param {boolean} halfPixelCenters
 * @returns {flatbuffers.Offset}
 */
tflite.ResizeNearestNeighborOptions.createResizeNearestNeighborOptions = function(builder, alignCorners, halfPixelCenters) {
  tflite.ResizeNearestNeighborOptions.startResizeNearestNeighborOptions(builder);
  tflite.ResizeNearestNeighborOptions.addAlignCorners(builder, alignCorners);
  tflite.ResizeNearestNeighborOptions.addHalfPixelCenters(builder, halfPixelCenters);
  return tflite.ResizeNearestNeighborOptions.endResizeNearestNeighborOptions(builder);
}

/**
 * @constructor
 */
tflite.CallOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.CallOptions}
 */
tflite.CallOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CallOptions=} obj
 * @returns {tflite.CallOptions}
 */
tflite.CallOptions.getRootAsCallOptions = function(bb, obj) {
  return (obj || new tflite.CallOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CallOptions=} obj
 * @returns {tflite.CallOptions}
 */
tflite.CallOptions.getSizePrefixedRootAsCallOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.CallOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.CallOptions.prototype.subgraph = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.CallOptions.prototype.mutate_subgraph = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.CallOptions.startCallOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} subgraph
 */
tflite.CallOptions.addSubgraph = function(builder, subgraph) {
  builder.addFieldInt32(0, subgraph, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.CallOptions.endCallOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} subgraph
 * @returns {flatbuffers.Offset}
 */
tflite.CallOptions.createCallOptions = function(builder, subgraph) {
  tflite.CallOptions.startCallOptions(builder);
  tflite.CallOptions.addSubgraph(builder, subgraph);
  return tflite.CallOptions.endCallOptions(builder);
}

/**
 * @constructor
 */
tflite.PadOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.PadOptions}
 */
tflite.PadOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PadOptions=} obj
 * @returns {tflite.PadOptions}
 */
tflite.PadOptions.getRootAsPadOptions = function(bb, obj) {
  return (obj || new tflite.PadOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PadOptions=} obj
 * @returns {tflite.PadOptions}
 */
tflite.PadOptions.getSizePrefixedRootAsPadOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.PadOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.PadOptions.startPadOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PadOptions.endPadOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PadOptions.createPadOptions = function(builder) {
  tflite.PadOptions.startPadOptions(builder);
  return tflite.PadOptions.endPadOptions(builder);
}

/**
 * @constructor
 */
tflite.PadV2Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.PadV2Options}
 */
tflite.PadV2Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PadV2Options=} obj
 * @returns {tflite.PadV2Options}
 */
tflite.PadV2Options.getRootAsPadV2Options = function(bb, obj) {
  return (obj || new tflite.PadV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PadV2Options=} obj
 * @returns {tflite.PadV2Options}
 */
tflite.PadV2Options.getSizePrefixedRootAsPadV2Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.PadV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.PadV2Options.startPadV2Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PadV2Options.endPadV2Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PadV2Options.createPadV2Options = function(builder) {
  tflite.PadV2Options.startPadV2Options(builder);
  return tflite.PadV2Options.endPadV2Options(builder);
}

/**
 * @constructor
 */
tflite.ReshapeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ReshapeOptions}
 */
tflite.ReshapeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReshapeOptions=} obj
 * @returns {tflite.ReshapeOptions}
 */
tflite.ReshapeOptions.getRootAsReshapeOptions = function(bb, obj) {
  return (obj || new tflite.ReshapeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReshapeOptions=} obj
 * @returns {tflite.ReshapeOptions}
 */
tflite.ReshapeOptions.getSizePrefixedRootAsReshapeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ReshapeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.ReshapeOptions.prototype.newShape = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.ReshapeOptions.prototype.newShapeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.ReshapeOptions.prototype.newShapeArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ReshapeOptions.startReshapeOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} newShapeOffset
 */
tflite.ReshapeOptions.addNewShape = function(builder, newShapeOffset) {
  builder.addFieldOffset(0, newShapeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.ReshapeOptions.createNewShapeVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.ReshapeOptions.startNewShapeVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ReshapeOptions.endReshapeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} newShapeOffset
 * @returns {flatbuffers.Offset}
 */
tflite.ReshapeOptions.createReshapeOptions = function(builder, newShapeOffset) {
  tflite.ReshapeOptions.startReshapeOptions(builder);
  tflite.ReshapeOptions.addNewShape(builder, newShapeOffset);
  return tflite.ReshapeOptions.endReshapeOptions(builder);
}

/**
 * @constructor
 */
tflite.SpaceToBatchNDOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SpaceToBatchNDOptions}
 */
tflite.SpaceToBatchNDOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SpaceToBatchNDOptions=} obj
 * @returns {tflite.SpaceToBatchNDOptions}
 */
tflite.SpaceToBatchNDOptions.getRootAsSpaceToBatchNDOptions = function(bb, obj) {
  return (obj || new tflite.SpaceToBatchNDOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SpaceToBatchNDOptions=} obj
 * @returns {tflite.SpaceToBatchNDOptions}
 */
tflite.SpaceToBatchNDOptions.getSizePrefixedRootAsSpaceToBatchNDOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SpaceToBatchNDOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SpaceToBatchNDOptions.startSpaceToBatchNDOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SpaceToBatchNDOptions.endSpaceToBatchNDOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SpaceToBatchNDOptions.createSpaceToBatchNDOptions = function(builder) {
  tflite.SpaceToBatchNDOptions.startSpaceToBatchNDOptions(builder);
  return tflite.SpaceToBatchNDOptions.endSpaceToBatchNDOptions(builder);
}

/**
 * @constructor
 */
tflite.BatchToSpaceNDOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.BatchToSpaceNDOptions}
 */
tflite.BatchToSpaceNDOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BatchToSpaceNDOptions=} obj
 * @returns {tflite.BatchToSpaceNDOptions}
 */
tflite.BatchToSpaceNDOptions.getRootAsBatchToSpaceNDOptions = function(bb, obj) {
  return (obj || new tflite.BatchToSpaceNDOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BatchToSpaceNDOptions=} obj
 * @returns {tflite.BatchToSpaceNDOptions}
 */
tflite.BatchToSpaceNDOptions.getSizePrefixedRootAsBatchToSpaceNDOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.BatchToSpaceNDOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.BatchToSpaceNDOptions.startBatchToSpaceNDOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.BatchToSpaceNDOptions.endBatchToSpaceNDOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.BatchToSpaceNDOptions.createBatchToSpaceNDOptions = function(builder) {
  tflite.BatchToSpaceNDOptions.startBatchToSpaceNDOptions(builder);
  return tflite.BatchToSpaceNDOptions.endBatchToSpaceNDOptions(builder);
}

/**
 * @constructor
 */
tflite.SkipGramOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SkipGramOptions}
 */
tflite.SkipGramOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SkipGramOptions=} obj
 * @returns {tflite.SkipGramOptions}
 */
tflite.SkipGramOptions.getRootAsSkipGramOptions = function(bb, obj) {
  return (obj || new tflite.SkipGramOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SkipGramOptions=} obj
 * @returns {tflite.SkipGramOptions}
 */
tflite.SkipGramOptions.getSizePrefixedRootAsSkipGramOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SkipGramOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SkipGramOptions.prototype.ngramSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SkipGramOptions.prototype.mutate_ngram_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.SkipGramOptions.prototype.maxSkipSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SkipGramOptions.prototype.mutate_max_skip_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.SkipGramOptions.prototype.includeAllNgrams = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SkipGramOptions.prototype.mutate_include_all_ngrams = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SkipGramOptions.startSkipGramOptions = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ngramSize
 */
tflite.SkipGramOptions.addNgramSize = function(builder, ngramSize) {
  builder.addFieldInt32(0, ngramSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} maxSkipSize
 */
tflite.SkipGramOptions.addMaxSkipSize = function(builder, maxSkipSize) {
  builder.addFieldInt32(1, maxSkipSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} includeAllNgrams
 */
tflite.SkipGramOptions.addIncludeAllNgrams = function(builder, includeAllNgrams) {
  builder.addFieldInt8(2, +includeAllNgrams, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SkipGramOptions.endSkipGramOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ngramSize
 * @param {number} maxSkipSize
 * @param {boolean} includeAllNgrams
 * @returns {flatbuffers.Offset}
 */
tflite.SkipGramOptions.createSkipGramOptions = function(builder, ngramSize, maxSkipSize, includeAllNgrams) {
  tflite.SkipGramOptions.startSkipGramOptions(builder);
  tflite.SkipGramOptions.addNgramSize(builder, ngramSize);
  tflite.SkipGramOptions.addMaxSkipSize(builder, maxSkipSize);
  tflite.SkipGramOptions.addIncludeAllNgrams(builder, includeAllNgrams);
  return tflite.SkipGramOptions.endSkipGramOptions(builder);
}

/**
 * @constructor
 */
tflite.SpaceToDepthOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SpaceToDepthOptions}
 */
tflite.SpaceToDepthOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SpaceToDepthOptions=} obj
 * @returns {tflite.SpaceToDepthOptions}
 */
tflite.SpaceToDepthOptions.getRootAsSpaceToDepthOptions = function(bb, obj) {
  return (obj || new tflite.SpaceToDepthOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SpaceToDepthOptions=} obj
 * @returns {tflite.SpaceToDepthOptions}
 */
tflite.SpaceToDepthOptions.getSizePrefixedRootAsSpaceToDepthOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SpaceToDepthOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SpaceToDepthOptions.prototype.blockSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SpaceToDepthOptions.prototype.mutate_block_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SpaceToDepthOptions.startSpaceToDepthOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} blockSize
 */
tflite.SpaceToDepthOptions.addBlockSize = function(builder, blockSize) {
  builder.addFieldInt32(0, blockSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SpaceToDepthOptions.endSpaceToDepthOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} blockSize
 * @returns {flatbuffers.Offset}
 */
tflite.SpaceToDepthOptions.createSpaceToDepthOptions = function(builder, blockSize) {
  tflite.SpaceToDepthOptions.startSpaceToDepthOptions(builder);
  tflite.SpaceToDepthOptions.addBlockSize(builder, blockSize);
  return tflite.SpaceToDepthOptions.endSpaceToDepthOptions(builder);
}

/**
 * @constructor
 */
tflite.DepthToSpaceOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DepthToSpaceOptions}
 */
tflite.DepthToSpaceOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DepthToSpaceOptions=} obj
 * @returns {tflite.DepthToSpaceOptions}
 */
tflite.DepthToSpaceOptions.getRootAsDepthToSpaceOptions = function(bb, obj) {
  return (obj || new tflite.DepthToSpaceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DepthToSpaceOptions=} obj
 * @returns {tflite.DepthToSpaceOptions}
 */
tflite.DepthToSpaceOptions.getSizePrefixedRootAsDepthToSpaceOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DepthToSpaceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.DepthToSpaceOptions.prototype.blockSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.DepthToSpaceOptions.prototype.mutate_block_size = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DepthToSpaceOptions.startDepthToSpaceOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} blockSize
 */
tflite.DepthToSpaceOptions.addBlockSize = function(builder, blockSize) {
  builder.addFieldInt32(0, blockSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DepthToSpaceOptions.endDepthToSpaceOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} blockSize
 * @returns {flatbuffers.Offset}
 */
tflite.DepthToSpaceOptions.createDepthToSpaceOptions = function(builder, blockSize) {
  tflite.DepthToSpaceOptions.startDepthToSpaceOptions(builder);
  tflite.DepthToSpaceOptions.addBlockSize(builder, blockSize);
  return tflite.DepthToSpaceOptions.endDepthToSpaceOptions(builder);
}

/**
 * @constructor
 */
tflite.SubOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SubOptions}
 */
tflite.SubOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SubOptions=} obj
 * @returns {tflite.SubOptions}
 */
tflite.SubOptions.getRootAsSubOptions = function(bb, obj) {
  return (obj || new tflite.SubOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SubOptions=} obj
 * @returns {tflite.SubOptions}
 */
tflite.SubOptions.getSizePrefixedRootAsSubOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SubOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.SubOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.SubOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.SubOptions.prototype.potScaleInt16 = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SubOptions.prototype.mutate_pot_scale_int16 = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SubOptions.startSubOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.SubOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} potScaleInt16
 */
tflite.SubOptions.addPotScaleInt16 = function(builder, potScaleInt16) {
  builder.addFieldInt8(1, +potScaleInt16, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SubOptions.endSubOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @param {boolean} potScaleInt16
 * @returns {flatbuffers.Offset}
 */
tflite.SubOptions.createSubOptions = function(builder, fusedActivationFunction, potScaleInt16) {
  tflite.SubOptions.startSubOptions(builder);
  tflite.SubOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  tflite.SubOptions.addPotScaleInt16(builder, potScaleInt16);
  return tflite.SubOptions.endSubOptions(builder);
}

/**
 * @constructor
 */
tflite.DivOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DivOptions}
 */
tflite.DivOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DivOptions=} obj
 * @returns {tflite.DivOptions}
 */
tflite.DivOptions.getRootAsDivOptions = function(bb, obj) {
  return (obj || new tflite.DivOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DivOptions=} obj
 * @returns {tflite.DivOptions}
 */
tflite.DivOptions.getSizePrefixedRootAsDivOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DivOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.ActivationFunctionType}
 */
tflite.DivOptions.prototype.fusedActivationFunction = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.ActivationFunctionType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.ActivationFunctionType.NONE;
};

/**
 * @param {tflite.ActivationFunctionType} value
 * @returns {boolean}
 */
tflite.DivOptions.prototype.mutate_fused_activation_function = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DivOptions.startDivOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 */
tflite.DivOptions.addFusedActivationFunction = function(builder, fusedActivationFunction) {
  builder.addFieldInt8(0, fusedActivationFunction, tflite.ActivationFunctionType.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DivOptions.endDivOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.ActivationFunctionType} fusedActivationFunction
 * @returns {flatbuffers.Offset}
 */
tflite.DivOptions.createDivOptions = function(builder, fusedActivationFunction) {
  tflite.DivOptions.startDivOptions(builder);
  tflite.DivOptions.addFusedActivationFunction(builder, fusedActivationFunction);
  return tflite.DivOptions.endDivOptions(builder);
}

/**
 * @constructor
 */
tflite.TopKV2Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.TopKV2Options}
 */
tflite.TopKV2Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TopKV2Options=} obj
 * @returns {tflite.TopKV2Options}
 */
tflite.TopKV2Options.getRootAsTopKV2Options = function(bb, obj) {
  return (obj || new tflite.TopKV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TopKV2Options=} obj
 * @returns {tflite.TopKV2Options}
 */
tflite.TopKV2Options.getSizePrefixedRootAsTopKV2Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.TopKV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.TopKV2Options.startTopKV2Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TopKV2Options.endTopKV2Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TopKV2Options.createTopKV2Options = function(builder) {
  tflite.TopKV2Options.startTopKV2Options(builder);
  return tflite.TopKV2Options.endTopKV2Options(builder);
}

/**
 * @constructor
 */
tflite.EmbeddingLookupSparseOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.EmbeddingLookupSparseOptions}
 */
tflite.EmbeddingLookupSparseOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.EmbeddingLookupSparseOptions=} obj
 * @returns {tflite.EmbeddingLookupSparseOptions}
 */
tflite.EmbeddingLookupSparseOptions.getRootAsEmbeddingLookupSparseOptions = function(bb, obj) {
  return (obj || new tflite.EmbeddingLookupSparseOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.EmbeddingLookupSparseOptions=} obj
 * @returns {tflite.EmbeddingLookupSparseOptions}
 */
tflite.EmbeddingLookupSparseOptions.getSizePrefixedRootAsEmbeddingLookupSparseOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.EmbeddingLookupSparseOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.CombinerType}
 */
tflite.EmbeddingLookupSparseOptions.prototype.combiner = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.CombinerType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.CombinerType.SUM;
};

/**
 * @param {tflite.CombinerType} value
 * @returns {boolean}
 */
tflite.EmbeddingLookupSparseOptions.prototype.mutate_combiner = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.EmbeddingLookupSparseOptions.startEmbeddingLookupSparseOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.CombinerType} combiner
 */
tflite.EmbeddingLookupSparseOptions.addCombiner = function(builder, combiner) {
  builder.addFieldInt8(0, combiner, tflite.CombinerType.SUM);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.EmbeddingLookupSparseOptions.endEmbeddingLookupSparseOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.CombinerType} combiner
 * @returns {flatbuffers.Offset}
 */
tflite.EmbeddingLookupSparseOptions.createEmbeddingLookupSparseOptions = function(builder, combiner) {
  tflite.EmbeddingLookupSparseOptions.startEmbeddingLookupSparseOptions(builder);
  tflite.EmbeddingLookupSparseOptions.addCombiner(builder, combiner);
  return tflite.EmbeddingLookupSparseOptions.endEmbeddingLookupSparseOptions(builder);
}

/**
 * @constructor
 */
tflite.GatherOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.GatherOptions}
 */
tflite.GatherOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GatherOptions=} obj
 * @returns {tflite.GatherOptions}
 */
tflite.GatherOptions.getRootAsGatherOptions = function(bb, obj) {
  return (obj || new tflite.GatherOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GatherOptions=} obj
 * @returns {tflite.GatherOptions}
 */
tflite.GatherOptions.getSizePrefixedRootAsGatherOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.GatherOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.GatherOptions.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.GatherOptions.prototype.mutate_axis = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.GatherOptions.startGatherOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
tflite.GatherOptions.addAxis = function(builder, axis) {
  builder.addFieldInt32(0, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GatherOptions.endGatherOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 * @returns {flatbuffers.Offset}
 */
tflite.GatherOptions.createGatherOptions = function(builder, axis) {
  tflite.GatherOptions.startGatherOptions(builder);
  tflite.GatherOptions.addAxis(builder, axis);
  return tflite.GatherOptions.endGatherOptions(builder);
}

/**
 * @constructor
 */
tflite.TransposeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.TransposeOptions}
 */
tflite.TransposeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TransposeOptions=} obj
 * @returns {tflite.TransposeOptions}
 */
tflite.TransposeOptions.getRootAsTransposeOptions = function(bb, obj) {
  return (obj || new tflite.TransposeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TransposeOptions=} obj
 * @returns {tflite.TransposeOptions}
 */
tflite.TransposeOptions.getSizePrefixedRootAsTransposeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.TransposeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.TransposeOptions.startTransposeOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TransposeOptions.endTransposeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TransposeOptions.createTransposeOptions = function(builder) {
  tflite.TransposeOptions.startTransposeOptions(builder);
  return tflite.TransposeOptions.endTransposeOptions(builder);
}

/**
 * @constructor
 */
tflite.ExpOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ExpOptions}
 */
tflite.ExpOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ExpOptions=} obj
 * @returns {tflite.ExpOptions}
 */
tflite.ExpOptions.getRootAsExpOptions = function(bb, obj) {
  return (obj || new tflite.ExpOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ExpOptions=} obj
 * @returns {tflite.ExpOptions}
 */
tflite.ExpOptions.getSizePrefixedRootAsExpOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ExpOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ExpOptions.startExpOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ExpOptions.endExpOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ExpOptions.createExpOptions = function(builder) {
  tflite.ExpOptions.startExpOptions(builder);
  return tflite.ExpOptions.endExpOptions(builder);
}

/**
 * @constructor
 */
tflite.CosOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.CosOptions}
 */
tflite.CosOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CosOptions=} obj
 * @returns {tflite.CosOptions}
 */
tflite.CosOptions.getRootAsCosOptions = function(bb, obj) {
  return (obj || new tflite.CosOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CosOptions=} obj
 * @returns {tflite.CosOptions}
 */
tflite.CosOptions.getSizePrefixedRootAsCosOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.CosOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.CosOptions.startCosOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.CosOptions.endCosOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.CosOptions.createCosOptions = function(builder) {
  tflite.CosOptions.startCosOptions(builder);
  return tflite.CosOptions.endCosOptions(builder);
}

/**
 * @constructor
 */
tflite.ReducerOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ReducerOptions}
 */
tflite.ReducerOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReducerOptions=} obj
 * @returns {tflite.ReducerOptions}
 */
tflite.ReducerOptions.getRootAsReducerOptions = function(bb, obj) {
  return (obj || new tflite.ReducerOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReducerOptions=} obj
 * @returns {tflite.ReducerOptions}
 */
tflite.ReducerOptions.getSizePrefixedRootAsReducerOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ReducerOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.ReducerOptions.prototype.keepDims = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.ReducerOptions.prototype.mutate_keep_dims = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ReducerOptions.startReducerOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} keepDims
 */
tflite.ReducerOptions.addKeepDims = function(builder, keepDims) {
  builder.addFieldInt8(0, +keepDims, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ReducerOptions.endReducerOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} keepDims
 * @returns {flatbuffers.Offset}
 */
tflite.ReducerOptions.createReducerOptions = function(builder, keepDims) {
  tflite.ReducerOptions.startReducerOptions(builder);
  tflite.ReducerOptions.addKeepDims(builder, keepDims);
  return tflite.ReducerOptions.endReducerOptions(builder);
}

/**
 * @constructor
 */
tflite.SqueezeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SqueezeOptions}
 */
tflite.SqueezeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SqueezeOptions=} obj
 * @returns {tflite.SqueezeOptions}
 */
tflite.SqueezeOptions.getRootAsSqueezeOptions = function(bb, obj) {
  return (obj || new tflite.SqueezeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SqueezeOptions=} obj
 * @returns {tflite.SqueezeOptions}
 */
tflite.SqueezeOptions.getSizePrefixedRootAsSqueezeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SqueezeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.SqueezeOptions.prototype.squeezeDims = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.SqueezeOptions.prototype.squeezeDimsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.SqueezeOptions.prototype.squeezeDimsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SqueezeOptions.startSqueezeOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} squeezeDimsOffset
 */
tflite.SqueezeOptions.addSqueezeDims = function(builder, squeezeDimsOffset) {
  builder.addFieldOffset(0, squeezeDimsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SqueezeOptions.createSqueezeDimsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SqueezeOptions.startSqueezeDimsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SqueezeOptions.endSqueezeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} squeezeDimsOffset
 * @returns {flatbuffers.Offset}
 */
tflite.SqueezeOptions.createSqueezeOptions = function(builder, squeezeDimsOffset) {
  tflite.SqueezeOptions.startSqueezeOptions(builder);
  tflite.SqueezeOptions.addSqueezeDims(builder, squeezeDimsOffset);
  return tflite.SqueezeOptions.endSqueezeOptions(builder);
}

/**
 * @constructor
 */
tflite.SplitOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SplitOptions}
 */
tflite.SplitOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SplitOptions=} obj
 * @returns {tflite.SplitOptions}
 */
tflite.SplitOptions.getRootAsSplitOptions = function(bb, obj) {
  return (obj || new tflite.SplitOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SplitOptions=} obj
 * @returns {tflite.SplitOptions}
 */
tflite.SplitOptions.getSizePrefixedRootAsSplitOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SplitOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SplitOptions.prototype.numSplits = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SplitOptions.prototype.mutate_num_splits = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SplitOptions.startSplitOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numSplits
 */
tflite.SplitOptions.addNumSplits = function(builder, numSplits) {
  builder.addFieldInt32(0, numSplits, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SplitOptions.endSplitOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numSplits
 * @returns {flatbuffers.Offset}
 */
tflite.SplitOptions.createSplitOptions = function(builder, numSplits) {
  tflite.SplitOptions.startSplitOptions(builder);
  tflite.SplitOptions.addNumSplits(builder, numSplits);
  return tflite.SplitOptions.endSplitOptions(builder);
}

/**
 * @constructor
 */
tflite.SplitVOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SplitVOptions}
 */
tflite.SplitVOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SplitVOptions=} obj
 * @returns {tflite.SplitVOptions}
 */
tflite.SplitVOptions.getRootAsSplitVOptions = function(bb, obj) {
  return (obj || new tflite.SplitVOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SplitVOptions=} obj
 * @returns {tflite.SplitVOptions}
 */
tflite.SplitVOptions.getSizePrefixedRootAsSplitVOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SplitVOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.SplitVOptions.prototype.numSplits = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.SplitVOptions.prototype.mutate_num_splits = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SplitVOptions.startSplitVOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numSplits
 */
tflite.SplitVOptions.addNumSplits = function(builder, numSplits) {
  builder.addFieldInt32(0, numSplits, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SplitVOptions.endSplitVOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numSplits
 * @returns {flatbuffers.Offset}
 */
tflite.SplitVOptions.createSplitVOptions = function(builder, numSplits) {
  tflite.SplitVOptions.startSplitVOptions(builder);
  tflite.SplitVOptions.addNumSplits(builder, numSplits);
  return tflite.SplitVOptions.endSplitVOptions(builder);
}

/**
 * @constructor
 */
tflite.StridedSliceOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.StridedSliceOptions}
 */
tflite.StridedSliceOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.StridedSliceOptions=} obj
 * @returns {tflite.StridedSliceOptions}
 */
tflite.StridedSliceOptions.getRootAsStridedSliceOptions = function(bb, obj) {
  return (obj || new tflite.StridedSliceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.StridedSliceOptions=} obj
 * @returns {tflite.StridedSliceOptions}
 */
tflite.StridedSliceOptions.getSizePrefixedRootAsStridedSliceOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.StridedSliceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.StridedSliceOptions.prototype.beginMask = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.StridedSliceOptions.prototype.mutate_begin_mask = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.StridedSliceOptions.prototype.endMask = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.StridedSliceOptions.prototype.mutate_end_mask = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.StridedSliceOptions.prototype.ellipsisMask = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.StridedSliceOptions.prototype.mutate_ellipsis_mask = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.StridedSliceOptions.prototype.newAxisMask = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.StridedSliceOptions.prototype.mutate_new_axis_mask = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.StridedSliceOptions.prototype.shrinkAxisMask = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.StridedSliceOptions.prototype.mutate_shrink_axis_mask = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 12);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.StridedSliceOptions.startStridedSliceOptions = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beginMask
 */
tflite.StridedSliceOptions.addBeginMask = function(builder, beginMask) {
  builder.addFieldInt32(0, beginMask, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} endMask
 */
tflite.StridedSliceOptions.addEndMask = function(builder, endMask) {
  builder.addFieldInt32(1, endMask, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ellipsisMask
 */
tflite.StridedSliceOptions.addEllipsisMask = function(builder, ellipsisMask) {
  builder.addFieldInt32(2, ellipsisMask, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} newAxisMask
 */
tflite.StridedSliceOptions.addNewAxisMask = function(builder, newAxisMask) {
  builder.addFieldInt32(3, newAxisMask, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} shrinkAxisMask
 */
tflite.StridedSliceOptions.addShrinkAxisMask = function(builder, shrinkAxisMask) {
  builder.addFieldInt32(4, shrinkAxisMask, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.StridedSliceOptions.endStridedSliceOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beginMask
 * @param {number} endMask
 * @param {number} ellipsisMask
 * @param {number} newAxisMask
 * @param {number} shrinkAxisMask
 * @returns {flatbuffers.Offset}
 */
tflite.StridedSliceOptions.createStridedSliceOptions = function(builder, beginMask, endMask, ellipsisMask, newAxisMask, shrinkAxisMask) {
  tflite.StridedSliceOptions.startStridedSliceOptions(builder);
  tflite.StridedSliceOptions.addBeginMask(builder, beginMask);
  tflite.StridedSliceOptions.addEndMask(builder, endMask);
  tflite.StridedSliceOptions.addEllipsisMask(builder, ellipsisMask);
  tflite.StridedSliceOptions.addNewAxisMask(builder, newAxisMask);
  tflite.StridedSliceOptions.addShrinkAxisMask(builder, shrinkAxisMask);
  return tflite.StridedSliceOptions.endStridedSliceOptions(builder);
}

/**
 * @constructor
 */
tflite.LogSoftmaxOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LogSoftmaxOptions}
 */
tflite.LogSoftmaxOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogSoftmaxOptions=} obj
 * @returns {tflite.LogSoftmaxOptions}
 */
tflite.LogSoftmaxOptions.getRootAsLogSoftmaxOptions = function(bb, obj) {
  return (obj || new tflite.LogSoftmaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogSoftmaxOptions=} obj
 * @returns {tflite.LogSoftmaxOptions}
 */
tflite.LogSoftmaxOptions.getSizePrefixedRootAsLogSoftmaxOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LogSoftmaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LogSoftmaxOptions.startLogSoftmaxOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogSoftmaxOptions.endLogSoftmaxOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogSoftmaxOptions.createLogSoftmaxOptions = function(builder) {
  tflite.LogSoftmaxOptions.startLogSoftmaxOptions(builder);
  return tflite.LogSoftmaxOptions.endLogSoftmaxOptions(builder);
}

/**
 * @constructor
 */
tflite.CastOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.CastOptions}
 */
tflite.CastOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CastOptions=} obj
 * @returns {tflite.CastOptions}
 */
tflite.CastOptions.getRootAsCastOptions = function(bb, obj) {
  return (obj || new tflite.CastOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.CastOptions=} obj
 * @returns {tflite.CastOptions}
 */
tflite.CastOptions.getSizePrefixedRootAsCastOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.CastOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.TensorType}
 */
tflite.CastOptions.prototype.inDataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.CastOptions.prototype.mutate_in_data_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {tflite.TensorType}
 */
tflite.CastOptions.prototype.outDataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.CastOptions.prototype.mutate_out_data_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.CastOptions.startCastOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} inDataType
 */
tflite.CastOptions.addInDataType = function(builder, inDataType) {
  builder.addFieldInt8(0, inDataType, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outDataType
 */
tflite.CastOptions.addOutDataType = function(builder, outDataType) {
  builder.addFieldInt8(1, outDataType, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.CastOptions.endCastOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} inDataType
 * @param {tflite.TensorType} outDataType
 * @returns {flatbuffers.Offset}
 */
tflite.CastOptions.createCastOptions = function(builder, inDataType, outDataType) {
  tflite.CastOptions.startCastOptions(builder);
  tflite.CastOptions.addInDataType(builder, inDataType);
  tflite.CastOptions.addOutDataType(builder, outDataType);
  return tflite.CastOptions.endCastOptions(builder);
}

/**
 * @constructor
 */
tflite.DequantizeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DequantizeOptions}
 */
tflite.DequantizeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DequantizeOptions=} obj
 * @returns {tflite.DequantizeOptions}
 */
tflite.DequantizeOptions.getRootAsDequantizeOptions = function(bb, obj) {
  return (obj || new tflite.DequantizeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DequantizeOptions=} obj
 * @returns {tflite.DequantizeOptions}
 */
tflite.DequantizeOptions.getSizePrefixedRootAsDequantizeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DequantizeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DequantizeOptions.startDequantizeOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DequantizeOptions.endDequantizeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DequantizeOptions.createDequantizeOptions = function(builder) {
  tflite.DequantizeOptions.startDequantizeOptions(builder);
  return tflite.DequantizeOptions.endDequantizeOptions(builder);
}

/**
 * @constructor
 */
tflite.MaximumMinimumOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.MaximumMinimumOptions}
 */
tflite.MaximumMinimumOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MaximumMinimumOptions=} obj
 * @returns {tflite.MaximumMinimumOptions}
 */
tflite.MaximumMinimumOptions.getRootAsMaximumMinimumOptions = function(bb, obj) {
  return (obj || new tflite.MaximumMinimumOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MaximumMinimumOptions=} obj
 * @returns {tflite.MaximumMinimumOptions}
 */
tflite.MaximumMinimumOptions.getSizePrefixedRootAsMaximumMinimumOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.MaximumMinimumOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.MaximumMinimumOptions.startMaximumMinimumOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MaximumMinimumOptions.endMaximumMinimumOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MaximumMinimumOptions.createMaximumMinimumOptions = function(builder) {
  tflite.MaximumMinimumOptions.startMaximumMinimumOptions(builder);
  return tflite.MaximumMinimumOptions.endMaximumMinimumOptions(builder);
}

/**
 * @constructor
 */
tflite.TileOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.TileOptions}
 */
tflite.TileOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TileOptions=} obj
 * @returns {tflite.TileOptions}
 */
tflite.TileOptions.getRootAsTileOptions = function(bb, obj) {
  return (obj || new tflite.TileOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TileOptions=} obj
 * @returns {tflite.TileOptions}
 */
tflite.TileOptions.getSizePrefixedRootAsTileOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.TileOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.TileOptions.startTileOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TileOptions.endTileOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TileOptions.createTileOptions = function(builder) {
  tflite.TileOptions.startTileOptions(builder);
  return tflite.TileOptions.endTileOptions(builder);
}

/**
 * @constructor
 */
tflite.ArgMaxOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ArgMaxOptions}
 */
tflite.ArgMaxOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ArgMaxOptions=} obj
 * @returns {tflite.ArgMaxOptions}
 */
tflite.ArgMaxOptions.getRootAsArgMaxOptions = function(bb, obj) {
  return (obj || new tflite.ArgMaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ArgMaxOptions=} obj
 * @returns {tflite.ArgMaxOptions}
 */
tflite.ArgMaxOptions.getSizePrefixedRootAsArgMaxOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ArgMaxOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.TensorType}
 */
tflite.ArgMaxOptions.prototype.outputType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.ArgMaxOptions.prototype.mutate_output_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ArgMaxOptions.startArgMaxOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outputType
 */
tflite.ArgMaxOptions.addOutputType = function(builder, outputType) {
  builder.addFieldInt8(0, outputType, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ArgMaxOptions.endArgMaxOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outputType
 * @returns {flatbuffers.Offset}
 */
tflite.ArgMaxOptions.createArgMaxOptions = function(builder, outputType) {
  tflite.ArgMaxOptions.startArgMaxOptions(builder);
  tflite.ArgMaxOptions.addOutputType(builder, outputType);
  return tflite.ArgMaxOptions.endArgMaxOptions(builder);
}

/**
 * @constructor
 */
tflite.ArgMinOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ArgMinOptions}
 */
tflite.ArgMinOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ArgMinOptions=} obj
 * @returns {tflite.ArgMinOptions}
 */
tflite.ArgMinOptions.getRootAsArgMinOptions = function(bb, obj) {
  return (obj || new tflite.ArgMinOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ArgMinOptions=} obj
 * @returns {tflite.ArgMinOptions}
 */
tflite.ArgMinOptions.getSizePrefixedRootAsArgMinOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ArgMinOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.TensorType}
 */
tflite.ArgMinOptions.prototype.outputType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.ArgMinOptions.prototype.mutate_output_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ArgMinOptions.startArgMinOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outputType
 */
tflite.ArgMinOptions.addOutputType = function(builder, outputType) {
  builder.addFieldInt8(0, outputType, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ArgMinOptions.endArgMinOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outputType
 * @returns {flatbuffers.Offset}
 */
tflite.ArgMinOptions.createArgMinOptions = function(builder, outputType) {
  tflite.ArgMinOptions.startArgMinOptions(builder);
  tflite.ArgMinOptions.addOutputType(builder, outputType);
  return tflite.ArgMinOptions.endArgMinOptions(builder);
}

/**
 * @constructor
 */
tflite.GreaterOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.GreaterOptions}
 */
tflite.GreaterOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GreaterOptions=} obj
 * @returns {tflite.GreaterOptions}
 */
tflite.GreaterOptions.getRootAsGreaterOptions = function(bb, obj) {
  return (obj || new tflite.GreaterOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GreaterOptions=} obj
 * @returns {tflite.GreaterOptions}
 */
tflite.GreaterOptions.getSizePrefixedRootAsGreaterOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.GreaterOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.GreaterOptions.startGreaterOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GreaterOptions.endGreaterOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GreaterOptions.createGreaterOptions = function(builder) {
  tflite.GreaterOptions.startGreaterOptions(builder);
  return tflite.GreaterOptions.endGreaterOptions(builder);
}

/**
 * @constructor
 */
tflite.GreaterEqualOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.GreaterEqualOptions}
 */
tflite.GreaterEqualOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GreaterEqualOptions=} obj
 * @returns {tflite.GreaterEqualOptions}
 */
tflite.GreaterEqualOptions.getRootAsGreaterEqualOptions = function(bb, obj) {
  return (obj || new tflite.GreaterEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GreaterEqualOptions=} obj
 * @returns {tflite.GreaterEqualOptions}
 */
tflite.GreaterEqualOptions.getSizePrefixedRootAsGreaterEqualOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.GreaterEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.GreaterEqualOptions.startGreaterEqualOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GreaterEqualOptions.endGreaterEqualOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GreaterEqualOptions.createGreaterEqualOptions = function(builder) {
  tflite.GreaterEqualOptions.startGreaterEqualOptions(builder);
  return tflite.GreaterEqualOptions.endGreaterEqualOptions(builder);
}

/**
 * @constructor
 */
tflite.LessOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LessOptions}
 */
tflite.LessOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LessOptions=} obj
 * @returns {tflite.LessOptions}
 */
tflite.LessOptions.getRootAsLessOptions = function(bb, obj) {
  return (obj || new tflite.LessOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LessOptions=} obj
 * @returns {tflite.LessOptions}
 */
tflite.LessOptions.getSizePrefixedRootAsLessOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LessOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LessOptions.startLessOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LessOptions.endLessOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LessOptions.createLessOptions = function(builder) {
  tflite.LessOptions.startLessOptions(builder);
  return tflite.LessOptions.endLessOptions(builder);
}

/**
 * @constructor
 */
tflite.LessEqualOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LessEqualOptions}
 */
tflite.LessEqualOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LessEqualOptions=} obj
 * @returns {tflite.LessEqualOptions}
 */
tflite.LessEqualOptions.getRootAsLessEqualOptions = function(bb, obj) {
  return (obj || new tflite.LessEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LessEqualOptions=} obj
 * @returns {tflite.LessEqualOptions}
 */
tflite.LessEqualOptions.getSizePrefixedRootAsLessEqualOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LessEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LessEqualOptions.startLessEqualOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LessEqualOptions.endLessEqualOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LessEqualOptions.createLessEqualOptions = function(builder) {
  tflite.LessEqualOptions.startLessEqualOptions(builder);
  return tflite.LessEqualOptions.endLessEqualOptions(builder);
}

/**
 * @constructor
 */
tflite.NegOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.NegOptions}
 */
tflite.NegOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NegOptions=} obj
 * @returns {tflite.NegOptions}
 */
tflite.NegOptions.getRootAsNegOptions = function(bb, obj) {
  return (obj || new tflite.NegOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NegOptions=} obj
 * @returns {tflite.NegOptions}
 */
tflite.NegOptions.getSizePrefixedRootAsNegOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.NegOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.NegOptions.startNegOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NegOptions.endNegOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NegOptions.createNegOptions = function(builder) {
  tflite.NegOptions.startNegOptions(builder);
  return tflite.NegOptions.endNegOptions(builder);
}

/**
 * @constructor
 */
tflite.SelectOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SelectOptions}
 */
tflite.SelectOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SelectOptions=} obj
 * @returns {tflite.SelectOptions}
 */
tflite.SelectOptions.getRootAsSelectOptions = function(bb, obj) {
  return (obj || new tflite.SelectOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SelectOptions=} obj
 * @returns {tflite.SelectOptions}
 */
tflite.SelectOptions.getSizePrefixedRootAsSelectOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SelectOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SelectOptions.startSelectOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SelectOptions.endSelectOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SelectOptions.createSelectOptions = function(builder) {
  tflite.SelectOptions.startSelectOptions(builder);
  return tflite.SelectOptions.endSelectOptions(builder);
}

/**
 * @constructor
 */
tflite.SliceOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SliceOptions}
 */
tflite.SliceOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SliceOptions=} obj
 * @returns {tflite.SliceOptions}
 */
tflite.SliceOptions.getRootAsSliceOptions = function(bb, obj) {
  return (obj || new tflite.SliceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SliceOptions=} obj
 * @returns {tflite.SliceOptions}
 */
tflite.SliceOptions.getSizePrefixedRootAsSliceOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SliceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SliceOptions.startSliceOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SliceOptions.endSliceOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SliceOptions.createSliceOptions = function(builder) {
  tflite.SliceOptions.startSliceOptions(builder);
  return tflite.SliceOptions.endSliceOptions(builder);
}

/**
 * @constructor
 */
tflite.TransposeConvOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.TransposeConvOptions}
 */
tflite.TransposeConvOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TransposeConvOptions=} obj
 * @returns {tflite.TransposeConvOptions}
 */
tflite.TransposeConvOptions.getRootAsTransposeConvOptions = function(bb, obj) {
  return (obj || new tflite.TransposeConvOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.TransposeConvOptions=} obj
 * @returns {tflite.TransposeConvOptions}
 */
tflite.TransposeConvOptions.getSizePrefixedRootAsTransposeConvOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.TransposeConvOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.Padding}
 */
tflite.TransposeConvOptions.prototype.padding = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.Padding} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.Padding.SAME;
};

/**
 * @param {tflite.Padding} value
 * @returns {boolean}
 */
tflite.TransposeConvOptions.prototype.mutate_padding = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.TransposeConvOptions.prototype.strideW = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.TransposeConvOptions.prototype.mutate_stride_w = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.TransposeConvOptions.prototype.strideH = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.TransposeConvOptions.prototype.mutate_stride_h = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.TransposeConvOptions.startTransposeConvOptions = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 */
tflite.TransposeConvOptions.addPadding = function(builder, padding) {
  builder.addFieldInt8(0, padding, tflite.Padding.SAME);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideW
 */
tflite.TransposeConvOptions.addStrideW = function(builder, strideW) {
  builder.addFieldInt32(1, strideW, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} strideH
 */
tflite.TransposeConvOptions.addStrideH = function(builder, strideH) {
  builder.addFieldInt32(2, strideH, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.TransposeConvOptions.endTransposeConvOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.Padding} padding
 * @param {number} strideW
 * @param {number} strideH
 * @returns {flatbuffers.Offset}
 */
tflite.TransposeConvOptions.createTransposeConvOptions = function(builder, padding, strideW, strideH) {
  tflite.TransposeConvOptions.startTransposeConvOptions(builder);
  tflite.TransposeConvOptions.addPadding(builder, padding);
  tflite.TransposeConvOptions.addStrideW(builder, strideW);
  tflite.TransposeConvOptions.addStrideH(builder, strideH);
  return tflite.TransposeConvOptions.endTransposeConvOptions(builder);
}

/**
 * @constructor
 */
tflite.ExpandDimsOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ExpandDimsOptions}
 */
tflite.ExpandDimsOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ExpandDimsOptions=} obj
 * @returns {tflite.ExpandDimsOptions}
 */
tflite.ExpandDimsOptions.getRootAsExpandDimsOptions = function(bb, obj) {
  return (obj || new tflite.ExpandDimsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ExpandDimsOptions=} obj
 * @returns {tflite.ExpandDimsOptions}
 */
tflite.ExpandDimsOptions.getSizePrefixedRootAsExpandDimsOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ExpandDimsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ExpandDimsOptions.startExpandDimsOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ExpandDimsOptions.endExpandDimsOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ExpandDimsOptions.createExpandDimsOptions = function(builder) {
  tflite.ExpandDimsOptions.startExpandDimsOptions(builder);
  return tflite.ExpandDimsOptions.endExpandDimsOptions(builder);
}

/**
 * @constructor
 */
tflite.SparseToDenseOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SparseToDenseOptions}
 */
tflite.SparseToDenseOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SparseToDenseOptions=} obj
 * @returns {tflite.SparseToDenseOptions}
 */
tflite.SparseToDenseOptions.getRootAsSparseToDenseOptions = function(bb, obj) {
  return (obj || new tflite.SparseToDenseOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SparseToDenseOptions=} obj
 * @returns {tflite.SparseToDenseOptions}
 */
tflite.SparseToDenseOptions.getSizePrefixedRootAsSparseToDenseOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SparseToDenseOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.SparseToDenseOptions.prototype.validateIndices = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.SparseToDenseOptions.prototype.mutate_validate_indices = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SparseToDenseOptions.startSparseToDenseOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} validateIndices
 */
tflite.SparseToDenseOptions.addValidateIndices = function(builder, validateIndices) {
  builder.addFieldInt8(0, +validateIndices, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SparseToDenseOptions.endSparseToDenseOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} validateIndices
 * @returns {flatbuffers.Offset}
 */
tflite.SparseToDenseOptions.createSparseToDenseOptions = function(builder, validateIndices) {
  tflite.SparseToDenseOptions.startSparseToDenseOptions(builder);
  tflite.SparseToDenseOptions.addValidateIndices(builder, validateIndices);
  return tflite.SparseToDenseOptions.endSparseToDenseOptions(builder);
}

/**
 * @constructor
 */
tflite.EqualOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.EqualOptions}
 */
tflite.EqualOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.EqualOptions=} obj
 * @returns {tflite.EqualOptions}
 */
tflite.EqualOptions.getRootAsEqualOptions = function(bb, obj) {
  return (obj || new tflite.EqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.EqualOptions=} obj
 * @returns {tflite.EqualOptions}
 */
tflite.EqualOptions.getSizePrefixedRootAsEqualOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.EqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.EqualOptions.startEqualOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.EqualOptions.endEqualOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.EqualOptions.createEqualOptions = function(builder) {
  tflite.EqualOptions.startEqualOptions(builder);
  return tflite.EqualOptions.endEqualOptions(builder);
}

/**
 * @constructor
 */
tflite.NotEqualOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.NotEqualOptions}
 */
tflite.NotEqualOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NotEqualOptions=} obj
 * @returns {tflite.NotEqualOptions}
 */
tflite.NotEqualOptions.getRootAsNotEqualOptions = function(bb, obj) {
  return (obj || new tflite.NotEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NotEqualOptions=} obj
 * @returns {tflite.NotEqualOptions}
 */
tflite.NotEqualOptions.getSizePrefixedRootAsNotEqualOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.NotEqualOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.NotEqualOptions.startNotEqualOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NotEqualOptions.endNotEqualOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NotEqualOptions.createNotEqualOptions = function(builder) {
  tflite.NotEqualOptions.startNotEqualOptions(builder);
  return tflite.NotEqualOptions.endNotEqualOptions(builder);
}

/**
 * @constructor
 */
tflite.ShapeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ShapeOptions}
 */
tflite.ShapeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ShapeOptions=} obj
 * @returns {tflite.ShapeOptions}
 */
tflite.ShapeOptions.getRootAsShapeOptions = function(bb, obj) {
  return (obj || new tflite.ShapeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ShapeOptions=} obj
 * @returns {tflite.ShapeOptions}
 */
tflite.ShapeOptions.getSizePrefixedRootAsShapeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ShapeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.TensorType}
 */
tflite.ShapeOptions.prototype.outType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.FLOAT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.ShapeOptions.prototype.mutate_out_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ShapeOptions.startShapeOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outType
 */
tflite.ShapeOptions.addOutType = function(builder, outType) {
  builder.addFieldInt8(0, outType, tflite.TensorType.FLOAT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ShapeOptions.endShapeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} outType
 * @returns {flatbuffers.Offset}
 */
tflite.ShapeOptions.createShapeOptions = function(builder, outType) {
  tflite.ShapeOptions.startShapeOptions(builder);
  tflite.ShapeOptions.addOutType(builder, outType);
  return tflite.ShapeOptions.endShapeOptions(builder);
}

/**
 * @constructor
 */
tflite.RankOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.RankOptions}
 */
tflite.RankOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RankOptions=} obj
 * @returns {tflite.RankOptions}
 */
tflite.RankOptions.getRootAsRankOptions = function(bb, obj) {
  return (obj || new tflite.RankOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RankOptions=} obj
 * @returns {tflite.RankOptions}
 */
tflite.RankOptions.getSizePrefixedRootAsRankOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.RankOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.RankOptions.startRankOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.RankOptions.endRankOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.RankOptions.createRankOptions = function(builder) {
  tflite.RankOptions.startRankOptions(builder);
  return tflite.RankOptions.endRankOptions(builder);
}

/**
 * @constructor
 */
tflite.PowOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.PowOptions}
 */
tflite.PowOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PowOptions=} obj
 * @returns {tflite.PowOptions}
 */
tflite.PowOptions.getRootAsPowOptions = function(bb, obj) {
  return (obj || new tflite.PowOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PowOptions=} obj
 * @returns {tflite.PowOptions}
 */
tflite.PowOptions.getSizePrefixedRootAsPowOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.PowOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.PowOptions.startPowOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PowOptions.endPowOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PowOptions.createPowOptions = function(builder) {
  tflite.PowOptions.startPowOptions(builder);
  return tflite.PowOptions.endPowOptions(builder);
}

/**
 * @constructor
 */
tflite.FakeQuantOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.FakeQuantOptions}
 */
tflite.FakeQuantOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FakeQuantOptions=} obj
 * @returns {tflite.FakeQuantOptions}
 */
tflite.FakeQuantOptions.getRootAsFakeQuantOptions = function(bb, obj) {
  return (obj || new tflite.FakeQuantOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FakeQuantOptions=} obj
 * @returns {tflite.FakeQuantOptions}
 */
tflite.FakeQuantOptions.getSizePrefixedRootAsFakeQuantOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.FakeQuantOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.FakeQuantOptions.prototype.min = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.FakeQuantOptions.prototype.mutate_min = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.FakeQuantOptions.prototype.max = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.FakeQuantOptions.prototype.mutate_max = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.FakeQuantOptions.prototype.numBits = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.FakeQuantOptions.prototype.mutate_num_bits = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.FakeQuantOptions.prototype.narrowRange = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.FakeQuantOptions.prototype.mutate_narrow_range = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 10);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.FakeQuantOptions.startFakeQuantOptions = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 */
tflite.FakeQuantOptions.addMin = function(builder, min) {
  builder.addFieldFloat32(0, min, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} max
 */
tflite.FakeQuantOptions.addMax = function(builder, max) {
  builder.addFieldFloat32(1, max, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numBits
 */
tflite.FakeQuantOptions.addNumBits = function(builder, numBits) {
  builder.addFieldInt32(2, numBits, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} narrowRange
 */
tflite.FakeQuantOptions.addNarrowRange = function(builder, narrowRange) {
  builder.addFieldInt8(3, +narrowRange, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FakeQuantOptions.endFakeQuantOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} min
 * @param {number} max
 * @param {number} numBits
 * @param {boolean} narrowRange
 * @returns {flatbuffers.Offset}
 */
tflite.FakeQuantOptions.createFakeQuantOptions = function(builder, min, max, numBits, narrowRange) {
  tflite.FakeQuantOptions.startFakeQuantOptions(builder);
  tflite.FakeQuantOptions.addMin(builder, min);
  tflite.FakeQuantOptions.addMax(builder, max);
  tflite.FakeQuantOptions.addNumBits(builder, numBits);
  tflite.FakeQuantOptions.addNarrowRange(builder, narrowRange);
  return tflite.FakeQuantOptions.endFakeQuantOptions(builder);
}

/**
 * @constructor
 */
tflite.PackOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.PackOptions}
 */
tflite.PackOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PackOptions=} obj
 * @returns {tflite.PackOptions}
 */
tflite.PackOptions.getRootAsPackOptions = function(bb, obj) {
  return (obj || new tflite.PackOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.PackOptions=} obj
 * @returns {tflite.PackOptions}
 */
tflite.PackOptions.getSizePrefixedRootAsPackOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.PackOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.PackOptions.prototype.valuesCount = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.PackOptions.prototype.mutate_values_count = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.PackOptions.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.PackOptions.prototype.mutate_axis = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.PackOptions.startPackOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} valuesCount
 */
tflite.PackOptions.addValuesCount = function(builder, valuesCount) {
  builder.addFieldInt32(0, valuesCount, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
tflite.PackOptions.addAxis = function(builder, axis) {
  builder.addFieldInt32(1, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.PackOptions.endPackOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} valuesCount
 * @param {number} axis
 * @returns {flatbuffers.Offset}
 */
tflite.PackOptions.createPackOptions = function(builder, valuesCount, axis) {
  tflite.PackOptions.startPackOptions(builder);
  tflite.PackOptions.addValuesCount(builder, valuesCount);
  tflite.PackOptions.addAxis(builder, axis);
  return tflite.PackOptions.endPackOptions(builder);
}

/**
 * @constructor
 */
tflite.LogicalOrOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LogicalOrOptions}
 */
tflite.LogicalOrOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalOrOptions=} obj
 * @returns {tflite.LogicalOrOptions}
 */
tflite.LogicalOrOptions.getRootAsLogicalOrOptions = function(bb, obj) {
  return (obj || new tflite.LogicalOrOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalOrOptions=} obj
 * @returns {tflite.LogicalOrOptions}
 */
tflite.LogicalOrOptions.getSizePrefixedRootAsLogicalOrOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LogicalOrOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LogicalOrOptions.startLogicalOrOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalOrOptions.endLogicalOrOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalOrOptions.createLogicalOrOptions = function(builder) {
  tflite.LogicalOrOptions.startLogicalOrOptions(builder);
  return tflite.LogicalOrOptions.endLogicalOrOptions(builder);
}

/**
 * @constructor
 */
tflite.OneHotOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.OneHotOptions}
 */
tflite.OneHotOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.OneHotOptions=} obj
 * @returns {tflite.OneHotOptions}
 */
tflite.OneHotOptions.getRootAsOneHotOptions = function(bb, obj) {
  return (obj || new tflite.OneHotOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.OneHotOptions=} obj
 * @returns {tflite.OneHotOptions}
 */
tflite.OneHotOptions.getSizePrefixedRootAsOneHotOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.OneHotOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.OneHotOptions.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.OneHotOptions.prototype.mutate_axis = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.OneHotOptions.startOneHotOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
tflite.OneHotOptions.addAxis = function(builder, axis) {
  builder.addFieldInt32(0, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.OneHotOptions.endOneHotOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 * @returns {flatbuffers.Offset}
 */
tflite.OneHotOptions.createOneHotOptions = function(builder, axis) {
  tflite.OneHotOptions.startOneHotOptions(builder);
  tflite.OneHotOptions.addAxis(builder, axis);
  return tflite.OneHotOptions.endOneHotOptions(builder);
}

/**
 * @constructor
 */
tflite.AbsOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.AbsOptions}
 */
tflite.AbsOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AbsOptions=} obj
 * @returns {tflite.AbsOptions}
 */
tflite.AbsOptions.getRootAsAbsOptions = function(bb, obj) {
  return (obj || new tflite.AbsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AbsOptions=} obj
 * @returns {tflite.AbsOptions}
 */
tflite.AbsOptions.getSizePrefixedRootAsAbsOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.AbsOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.AbsOptions.startAbsOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.AbsOptions.endAbsOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.AbsOptions.createAbsOptions = function(builder) {
  tflite.AbsOptions.startAbsOptions(builder);
  return tflite.AbsOptions.endAbsOptions(builder);
}

/**
 * @constructor
 */
tflite.HardSwishOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.HardSwishOptions}
 */
tflite.HardSwishOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.HardSwishOptions=} obj
 * @returns {tflite.HardSwishOptions}
 */
tflite.HardSwishOptions.getRootAsHardSwishOptions = function(bb, obj) {
  return (obj || new tflite.HardSwishOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.HardSwishOptions=} obj
 * @returns {tflite.HardSwishOptions}
 */
tflite.HardSwishOptions.getSizePrefixedRootAsHardSwishOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.HardSwishOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.HardSwishOptions.startHardSwishOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.HardSwishOptions.endHardSwishOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.HardSwishOptions.createHardSwishOptions = function(builder) {
  tflite.HardSwishOptions.startHardSwishOptions(builder);
  return tflite.HardSwishOptions.endHardSwishOptions(builder);
}

/**
 * @constructor
 */
tflite.LogicalAndOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LogicalAndOptions}
 */
tflite.LogicalAndOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalAndOptions=} obj
 * @returns {tflite.LogicalAndOptions}
 */
tflite.LogicalAndOptions.getRootAsLogicalAndOptions = function(bb, obj) {
  return (obj || new tflite.LogicalAndOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalAndOptions=} obj
 * @returns {tflite.LogicalAndOptions}
 */
tflite.LogicalAndOptions.getSizePrefixedRootAsLogicalAndOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LogicalAndOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LogicalAndOptions.startLogicalAndOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalAndOptions.endLogicalAndOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalAndOptions.createLogicalAndOptions = function(builder) {
  tflite.LogicalAndOptions.startLogicalAndOptions(builder);
  return tflite.LogicalAndOptions.endLogicalAndOptions(builder);
}

/**
 * @constructor
 */
tflite.LogicalNotOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LogicalNotOptions}
 */
tflite.LogicalNotOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalNotOptions=} obj
 * @returns {tflite.LogicalNotOptions}
 */
tflite.LogicalNotOptions.getRootAsLogicalNotOptions = function(bb, obj) {
  return (obj || new tflite.LogicalNotOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LogicalNotOptions=} obj
 * @returns {tflite.LogicalNotOptions}
 */
tflite.LogicalNotOptions.getSizePrefixedRootAsLogicalNotOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LogicalNotOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LogicalNotOptions.startLogicalNotOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalNotOptions.endLogicalNotOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LogicalNotOptions.createLogicalNotOptions = function(builder) {
  tflite.LogicalNotOptions.startLogicalNotOptions(builder);
  return tflite.LogicalNotOptions.endLogicalNotOptions(builder);
}

/**
 * @constructor
 */
tflite.UnpackOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.UnpackOptions}
 */
tflite.UnpackOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UnpackOptions=} obj
 * @returns {tflite.UnpackOptions}
 */
tflite.UnpackOptions.getRootAsUnpackOptions = function(bb, obj) {
  return (obj || new tflite.UnpackOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UnpackOptions=} obj
 * @returns {tflite.UnpackOptions}
 */
tflite.UnpackOptions.getSizePrefixedRootAsUnpackOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.UnpackOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.UnpackOptions.prototype.num = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.UnpackOptions.prototype.mutate_num = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.UnpackOptions.prototype.axis = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.UnpackOptions.prototype.mutate_axis = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.UnpackOptions.startUnpackOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} num
 */
tflite.UnpackOptions.addNum = function(builder, num) {
  builder.addFieldInt32(0, num, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} axis
 */
tflite.UnpackOptions.addAxis = function(builder, axis) {
  builder.addFieldInt32(1, axis, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.UnpackOptions.endUnpackOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} num
 * @param {number} axis
 * @returns {flatbuffers.Offset}
 */
tflite.UnpackOptions.createUnpackOptions = function(builder, num, axis) {
  tflite.UnpackOptions.startUnpackOptions(builder);
  tflite.UnpackOptions.addNum(builder, num);
  tflite.UnpackOptions.addAxis(builder, axis);
  return tflite.UnpackOptions.endUnpackOptions(builder);
}

/**
 * @constructor
 */
tflite.FloorDivOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.FloorDivOptions}
 */
tflite.FloorDivOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FloorDivOptions=} obj
 * @returns {tflite.FloorDivOptions}
 */
tflite.FloorDivOptions.getRootAsFloorDivOptions = function(bb, obj) {
  return (obj || new tflite.FloorDivOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FloorDivOptions=} obj
 * @returns {tflite.FloorDivOptions}
 */
tflite.FloorDivOptions.getSizePrefixedRootAsFloorDivOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.FloorDivOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.FloorDivOptions.startFloorDivOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FloorDivOptions.endFloorDivOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FloorDivOptions.createFloorDivOptions = function(builder) {
  tflite.FloorDivOptions.startFloorDivOptions(builder);
  return tflite.FloorDivOptions.endFloorDivOptions(builder);
}

/**
 * @constructor
 */
tflite.SquareOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SquareOptions}
 */
tflite.SquareOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SquareOptions=} obj
 * @returns {tflite.SquareOptions}
 */
tflite.SquareOptions.getRootAsSquareOptions = function(bb, obj) {
  return (obj || new tflite.SquareOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SquareOptions=} obj
 * @returns {tflite.SquareOptions}
 */
tflite.SquareOptions.getSizePrefixedRootAsSquareOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SquareOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SquareOptions.startSquareOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SquareOptions.endSquareOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SquareOptions.createSquareOptions = function(builder) {
  tflite.SquareOptions.startSquareOptions(builder);
  return tflite.SquareOptions.endSquareOptions(builder);
}

/**
 * @constructor
 */
tflite.ZerosLikeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ZerosLikeOptions}
 */
tflite.ZerosLikeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ZerosLikeOptions=} obj
 * @returns {tflite.ZerosLikeOptions}
 */
tflite.ZerosLikeOptions.getRootAsZerosLikeOptions = function(bb, obj) {
  return (obj || new tflite.ZerosLikeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ZerosLikeOptions=} obj
 * @returns {tflite.ZerosLikeOptions}
 */
tflite.ZerosLikeOptions.getSizePrefixedRootAsZerosLikeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ZerosLikeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ZerosLikeOptions.startZerosLikeOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ZerosLikeOptions.endZerosLikeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ZerosLikeOptions.createZerosLikeOptions = function(builder) {
  tflite.ZerosLikeOptions.startZerosLikeOptions(builder);
  return tflite.ZerosLikeOptions.endZerosLikeOptions(builder);
}

/**
 * @constructor
 */
tflite.FillOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.FillOptions}
 */
tflite.FillOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FillOptions=} obj
 * @returns {tflite.FillOptions}
 */
tflite.FillOptions.getRootAsFillOptions = function(bb, obj) {
  return (obj || new tflite.FillOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FillOptions=} obj
 * @returns {tflite.FillOptions}
 */
tflite.FillOptions.getSizePrefixedRootAsFillOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.FillOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.FillOptions.startFillOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FillOptions.endFillOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FillOptions.createFillOptions = function(builder) {
  tflite.FillOptions.startFillOptions(builder);
  return tflite.FillOptions.endFillOptions(builder);
}

/**
 * @constructor
 */
tflite.FloorModOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.FloorModOptions}
 */
tflite.FloorModOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FloorModOptions=} obj
 * @returns {tflite.FloorModOptions}
 */
tflite.FloorModOptions.getRootAsFloorModOptions = function(bb, obj) {
  return (obj || new tflite.FloorModOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.FloorModOptions=} obj
 * @returns {tflite.FloorModOptions}
 */
tflite.FloorModOptions.getSizePrefixedRootAsFloorModOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.FloorModOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.FloorModOptions.startFloorModOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FloorModOptions.endFloorModOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.FloorModOptions.createFloorModOptions = function(builder) {
  tflite.FloorModOptions.startFloorModOptions(builder);
  return tflite.FloorModOptions.endFloorModOptions(builder);
}

/**
 * @constructor
 */
tflite.RangeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.RangeOptions}
 */
tflite.RangeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RangeOptions=} obj
 * @returns {tflite.RangeOptions}
 */
tflite.RangeOptions.getRootAsRangeOptions = function(bb, obj) {
  return (obj || new tflite.RangeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.RangeOptions=} obj
 * @returns {tflite.RangeOptions}
 */
tflite.RangeOptions.getSizePrefixedRootAsRangeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.RangeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.RangeOptions.startRangeOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.RangeOptions.endRangeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.RangeOptions.createRangeOptions = function(builder) {
  tflite.RangeOptions.startRangeOptions(builder);
  return tflite.RangeOptions.endRangeOptions(builder);
}

/**
 * @constructor
 */
tflite.LeakyReluOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.LeakyReluOptions}
 */
tflite.LeakyReluOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LeakyReluOptions=} obj
 * @returns {tflite.LeakyReluOptions}
 */
tflite.LeakyReluOptions.getRootAsLeakyReluOptions = function(bb, obj) {
  return (obj || new tflite.LeakyReluOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.LeakyReluOptions=} obj
 * @returns {tflite.LeakyReluOptions}
 */
tflite.LeakyReluOptions.getSizePrefixedRootAsLeakyReluOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.LeakyReluOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.LeakyReluOptions.prototype.alpha = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.LeakyReluOptions.prototype.mutate_alpha = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.LeakyReluOptions.startLeakyReluOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} alpha
 */
tflite.LeakyReluOptions.addAlpha = function(builder, alpha) {
  builder.addFieldFloat32(0, alpha, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.LeakyReluOptions.endLeakyReluOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} alpha
 * @returns {flatbuffers.Offset}
 */
tflite.LeakyReluOptions.createLeakyReluOptions = function(builder, alpha) {
  tflite.LeakyReluOptions.startLeakyReluOptions(builder);
  tflite.LeakyReluOptions.addAlpha(builder, alpha);
  return tflite.LeakyReluOptions.endLeakyReluOptions(builder);
}

/**
 * @constructor
 */
tflite.SquaredDifferenceOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SquaredDifferenceOptions}
 */
tflite.SquaredDifferenceOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SquaredDifferenceOptions=} obj
 * @returns {tflite.SquaredDifferenceOptions}
 */
tflite.SquaredDifferenceOptions.getRootAsSquaredDifferenceOptions = function(bb, obj) {
  return (obj || new tflite.SquaredDifferenceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SquaredDifferenceOptions=} obj
 * @returns {tflite.SquaredDifferenceOptions}
 */
tflite.SquaredDifferenceOptions.getSizePrefixedRootAsSquaredDifferenceOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SquaredDifferenceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SquaredDifferenceOptions.startSquaredDifferenceOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SquaredDifferenceOptions.endSquaredDifferenceOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SquaredDifferenceOptions.createSquaredDifferenceOptions = function(builder) {
  tflite.SquaredDifferenceOptions.startSquaredDifferenceOptions(builder);
  return tflite.SquaredDifferenceOptions.endSquaredDifferenceOptions(builder);
}

/**
 * @constructor
 */
tflite.MirrorPadOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.MirrorPadOptions}
 */
tflite.MirrorPadOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MirrorPadOptions=} obj
 * @returns {tflite.MirrorPadOptions}
 */
tflite.MirrorPadOptions.getRootAsMirrorPadOptions = function(bb, obj) {
  return (obj || new tflite.MirrorPadOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MirrorPadOptions=} obj
 * @returns {tflite.MirrorPadOptions}
 */
tflite.MirrorPadOptions.getSizePrefixedRootAsMirrorPadOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.MirrorPadOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.MirrorPadMode}
 */
tflite.MirrorPadOptions.prototype.mode = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.MirrorPadMode} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.MirrorPadMode.REFLECT;
};

/**
 * @param {tflite.MirrorPadMode} value
 * @returns {boolean}
 */
tflite.MirrorPadOptions.prototype.mutate_mode = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.MirrorPadOptions.startMirrorPadOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.MirrorPadMode} mode
 */
tflite.MirrorPadOptions.addMode = function(builder, mode) {
  builder.addFieldInt8(0, mode, tflite.MirrorPadMode.REFLECT);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MirrorPadOptions.endMirrorPadOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.MirrorPadMode} mode
 * @returns {flatbuffers.Offset}
 */
tflite.MirrorPadOptions.createMirrorPadOptions = function(builder, mode) {
  tflite.MirrorPadOptions.startMirrorPadOptions(builder);
  tflite.MirrorPadOptions.addMode(builder, mode);
  return tflite.MirrorPadOptions.endMirrorPadOptions(builder);
}

/**
 * @constructor
 */
tflite.UniqueOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.UniqueOptions}
 */
tflite.UniqueOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UniqueOptions=} obj
 * @returns {tflite.UniqueOptions}
 */
tflite.UniqueOptions.getRootAsUniqueOptions = function(bb, obj) {
  return (obj || new tflite.UniqueOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.UniqueOptions=} obj
 * @returns {tflite.UniqueOptions}
 */
tflite.UniqueOptions.getSizePrefixedRootAsUniqueOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.UniqueOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.TensorType}
 */
tflite.UniqueOptions.prototype.idxOutType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.TensorType} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.TensorType.INT32;
};

/**
 * @param {tflite.TensorType} value
 * @returns {boolean}
 */
tflite.UniqueOptions.prototype.mutate_idx_out_type = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.UniqueOptions.startUniqueOptions = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} idxOutType
 */
tflite.UniqueOptions.addIdxOutType = function(builder, idxOutType) {
  builder.addFieldInt8(0, idxOutType, tflite.TensorType.INT32);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.UniqueOptions.endUniqueOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.TensorType} idxOutType
 * @returns {flatbuffers.Offset}
 */
tflite.UniqueOptions.createUniqueOptions = function(builder, idxOutType) {
  tflite.UniqueOptions.startUniqueOptions(builder);
  tflite.UniqueOptions.addIdxOutType(builder, idxOutType);
  return tflite.UniqueOptions.endUniqueOptions(builder);
}

/**
 * @constructor
 */
tflite.ReverseV2Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ReverseV2Options}
 */
tflite.ReverseV2Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReverseV2Options=} obj
 * @returns {tflite.ReverseV2Options}
 */
tflite.ReverseV2Options.getRootAsReverseV2Options = function(bb, obj) {
  return (obj || new tflite.ReverseV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReverseV2Options=} obj
 * @returns {tflite.ReverseV2Options}
 */
tflite.ReverseV2Options.getSizePrefixedRootAsReverseV2Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ReverseV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ReverseV2Options.startReverseV2Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ReverseV2Options.endReverseV2Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ReverseV2Options.createReverseV2Options = function(builder) {
  tflite.ReverseV2Options.startReverseV2Options(builder);
  return tflite.ReverseV2Options.endReverseV2Options(builder);
}

/**
 * @constructor
 */
tflite.AddNOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.AddNOptions}
 */
tflite.AddNOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AddNOptions=} obj
 * @returns {tflite.AddNOptions}
 */
tflite.AddNOptions.getRootAsAddNOptions = function(bb, obj) {
  return (obj || new tflite.AddNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.AddNOptions=} obj
 * @returns {tflite.AddNOptions}
 */
tflite.AddNOptions.getSizePrefixedRootAsAddNOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.AddNOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.AddNOptions.startAddNOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.AddNOptions.endAddNOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.AddNOptions.createAddNOptions = function(builder) {
  tflite.AddNOptions.startAddNOptions(builder);
  return tflite.AddNOptions.endAddNOptions(builder);
}

/**
 * @constructor
 */
tflite.GatherNdOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.GatherNdOptions}
 */
tflite.GatherNdOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GatherNdOptions=} obj
 * @returns {tflite.GatherNdOptions}
 */
tflite.GatherNdOptions.getRootAsGatherNdOptions = function(bb, obj) {
  return (obj || new tflite.GatherNdOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.GatherNdOptions=} obj
 * @returns {tflite.GatherNdOptions}
 */
tflite.GatherNdOptions.getSizePrefixedRootAsGatherNdOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.GatherNdOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.GatherNdOptions.startGatherNdOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GatherNdOptions.endGatherNdOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.GatherNdOptions.createGatherNdOptions = function(builder) {
  tflite.GatherNdOptions.startGatherNdOptions(builder);
  return tflite.GatherNdOptions.endGatherNdOptions(builder);
}

/**
 * @constructor
 */
tflite.WhereOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.WhereOptions}
 */
tflite.WhereOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.WhereOptions=} obj
 * @returns {tflite.WhereOptions}
 */
tflite.WhereOptions.getRootAsWhereOptions = function(bb, obj) {
  return (obj || new tflite.WhereOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.WhereOptions=} obj
 * @returns {tflite.WhereOptions}
 */
tflite.WhereOptions.getSizePrefixedRootAsWhereOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.WhereOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.WhereOptions.startWhereOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.WhereOptions.endWhereOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.WhereOptions.createWhereOptions = function(builder) {
  tflite.WhereOptions.startWhereOptions(builder);
  return tflite.WhereOptions.endWhereOptions(builder);
}

/**
 * @constructor
 */
tflite.ReverseSequenceOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ReverseSequenceOptions}
 */
tflite.ReverseSequenceOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReverseSequenceOptions=} obj
 * @returns {tflite.ReverseSequenceOptions}
 */
tflite.ReverseSequenceOptions.getRootAsReverseSequenceOptions = function(bb, obj) {
  return (obj || new tflite.ReverseSequenceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ReverseSequenceOptions=} obj
 * @returns {tflite.ReverseSequenceOptions}
 */
tflite.ReverseSequenceOptions.getSizePrefixedRootAsReverseSequenceOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ReverseSequenceOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.ReverseSequenceOptions.prototype.seqDim = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.ReverseSequenceOptions.prototype.mutate_seq_dim = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.ReverseSequenceOptions.prototype.batchDim = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.ReverseSequenceOptions.prototype.mutate_batch_dim = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ReverseSequenceOptions.startReverseSequenceOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} seqDim
 */
tflite.ReverseSequenceOptions.addSeqDim = function(builder, seqDim) {
  builder.addFieldInt32(0, seqDim, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} batchDim
 */
tflite.ReverseSequenceOptions.addBatchDim = function(builder, batchDim) {
  builder.addFieldInt32(1, batchDim, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ReverseSequenceOptions.endReverseSequenceOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} seqDim
 * @param {number} batchDim
 * @returns {flatbuffers.Offset}
 */
tflite.ReverseSequenceOptions.createReverseSequenceOptions = function(builder, seqDim, batchDim) {
  tflite.ReverseSequenceOptions.startReverseSequenceOptions(builder);
  tflite.ReverseSequenceOptions.addSeqDim(builder, seqDim);
  tflite.ReverseSequenceOptions.addBatchDim(builder, batchDim);
  return tflite.ReverseSequenceOptions.endReverseSequenceOptions(builder);
}

/**
 * @constructor
 */
tflite.MatrixDiagOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.MatrixDiagOptions}
 */
tflite.MatrixDiagOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MatrixDiagOptions=} obj
 * @returns {tflite.MatrixDiagOptions}
 */
tflite.MatrixDiagOptions.getRootAsMatrixDiagOptions = function(bb, obj) {
  return (obj || new tflite.MatrixDiagOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MatrixDiagOptions=} obj
 * @returns {tflite.MatrixDiagOptions}
 */
tflite.MatrixDiagOptions.getSizePrefixedRootAsMatrixDiagOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.MatrixDiagOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.MatrixDiagOptions.startMatrixDiagOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MatrixDiagOptions.endMatrixDiagOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MatrixDiagOptions.createMatrixDiagOptions = function(builder) {
  tflite.MatrixDiagOptions.startMatrixDiagOptions(builder);
  return tflite.MatrixDiagOptions.endMatrixDiagOptions(builder);
}

/**
 * @constructor
 */
tflite.QuantizeOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.QuantizeOptions}
 */
tflite.QuantizeOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.QuantizeOptions=} obj
 * @returns {tflite.QuantizeOptions}
 */
tflite.QuantizeOptions.getRootAsQuantizeOptions = function(bb, obj) {
  return (obj || new tflite.QuantizeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.QuantizeOptions=} obj
 * @returns {tflite.QuantizeOptions}
 */
tflite.QuantizeOptions.getSizePrefixedRootAsQuantizeOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.QuantizeOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.QuantizeOptions.startQuantizeOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizeOptions.endQuantizeOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.QuantizeOptions.createQuantizeOptions = function(builder) {
  tflite.QuantizeOptions.startQuantizeOptions(builder);
  return tflite.QuantizeOptions.endQuantizeOptions(builder);
}

/**
 * @constructor
 */
tflite.MatrixSetDiagOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.MatrixSetDiagOptions}
 */
tflite.MatrixSetDiagOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MatrixSetDiagOptions=} obj
 * @returns {tflite.MatrixSetDiagOptions}
 */
tflite.MatrixSetDiagOptions.getRootAsMatrixSetDiagOptions = function(bb, obj) {
  return (obj || new tflite.MatrixSetDiagOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.MatrixSetDiagOptions=} obj
 * @returns {tflite.MatrixSetDiagOptions}
 */
tflite.MatrixSetDiagOptions.getSizePrefixedRootAsMatrixSetDiagOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.MatrixSetDiagOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.MatrixSetDiagOptions.startMatrixSetDiagOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MatrixSetDiagOptions.endMatrixSetDiagOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.MatrixSetDiagOptions.createMatrixSetDiagOptions = function(builder) {
  tflite.MatrixSetDiagOptions.startMatrixSetDiagOptions(builder);
  return tflite.MatrixSetDiagOptions.endMatrixSetDiagOptions(builder);
}

/**
 * @constructor
 */
tflite.IfOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.IfOptions}
 */
tflite.IfOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.IfOptions=} obj
 * @returns {tflite.IfOptions}
 */
tflite.IfOptions.getRootAsIfOptions = function(bb, obj) {
  return (obj || new tflite.IfOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.IfOptions=} obj
 * @returns {tflite.IfOptions}
 */
tflite.IfOptions.getSizePrefixedRootAsIfOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.IfOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.IfOptions.prototype.thenSubgraphIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.IfOptions.prototype.mutate_then_subgraph_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.IfOptions.prototype.elseSubgraphIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.IfOptions.prototype.mutate_else_subgraph_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.IfOptions.startIfOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} thenSubgraphIndex
 */
tflite.IfOptions.addThenSubgraphIndex = function(builder, thenSubgraphIndex) {
  builder.addFieldInt32(0, thenSubgraphIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} elseSubgraphIndex
 */
tflite.IfOptions.addElseSubgraphIndex = function(builder, elseSubgraphIndex) {
  builder.addFieldInt32(1, elseSubgraphIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.IfOptions.endIfOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} thenSubgraphIndex
 * @param {number} elseSubgraphIndex
 * @returns {flatbuffers.Offset}
 */
tflite.IfOptions.createIfOptions = function(builder, thenSubgraphIndex, elseSubgraphIndex) {
  tflite.IfOptions.startIfOptions(builder);
  tflite.IfOptions.addThenSubgraphIndex(builder, thenSubgraphIndex);
  tflite.IfOptions.addElseSubgraphIndex(builder, elseSubgraphIndex);
  return tflite.IfOptions.endIfOptions(builder);
}

/**
 * @constructor
 */
tflite.WhileOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.WhileOptions}
 */
tflite.WhileOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.WhileOptions=} obj
 * @returns {tflite.WhileOptions}
 */
tflite.WhileOptions.getRootAsWhileOptions = function(bb, obj) {
  return (obj || new tflite.WhileOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.WhileOptions=} obj
 * @returns {tflite.WhileOptions}
 */
tflite.WhileOptions.getSizePrefixedRootAsWhileOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.WhileOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.WhileOptions.prototype.condSubgraphIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.WhileOptions.prototype.mutate_cond_subgraph_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {number}
 */
tflite.WhileOptions.prototype.bodySubgraphIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.WhileOptions.prototype.mutate_body_subgraph_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.WhileOptions.startWhileOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} condSubgraphIndex
 */
tflite.WhileOptions.addCondSubgraphIndex = function(builder, condSubgraphIndex) {
  builder.addFieldInt32(0, condSubgraphIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} bodySubgraphIndex
 */
tflite.WhileOptions.addBodySubgraphIndex = function(builder, bodySubgraphIndex) {
  builder.addFieldInt32(1, bodySubgraphIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.WhileOptions.endWhileOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} condSubgraphIndex
 * @param {number} bodySubgraphIndex
 * @returns {flatbuffers.Offset}
 */
tflite.WhileOptions.createWhileOptions = function(builder, condSubgraphIndex, bodySubgraphIndex) {
  tflite.WhileOptions.startWhileOptions(builder);
  tflite.WhileOptions.addCondSubgraphIndex(builder, condSubgraphIndex);
  tflite.WhileOptions.addBodySubgraphIndex(builder, bodySubgraphIndex);
  return tflite.WhileOptions.endWhileOptions(builder);
}

/**
 * @constructor
 */
tflite.NonMaxSuppressionV4Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.NonMaxSuppressionV4Options}
 */
tflite.NonMaxSuppressionV4Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NonMaxSuppressionV4Options=} obj
 * @returns {tflite.NonMaxSuppressionV4Options}
 */
tflite.NonMaxSuppressionV4Options.getRootAsNonMaxSuppressionV4Options = function(bb, obj) {
  return (obj || new tflite.NonMaxSuppressionV4Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NonMaxSuppressionV4Options=} obj
 * @returns {tflite.NonMaxSuppressionV4Options}
 */
tflite.NonMaxSuppressionV4Options.getSizePrefixedRootAsNonMaxSuppressionV4Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.NonMaxSuppressionV4Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.NonMaxSuppressionV4Options.startNonMaxSuppressionV4Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NonMaxSuppressionV4Options.endNonMaxSuppressionV4Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NonMaxSuppressionV4Options.createNonMaxSuppressionV4Options = function(builder) {
  tflite.NonMaxSuppressionV4Options.startNonMaxSuppressionV4Options(builder);
  return tflite.NonMaxSuppressionV4Options.endNonMaxSuppressionV4Options(builder);
}

/**
 * @constructor
 */
tflite.NonMaxSuppressionV5Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.NonMaxSuppressionV5Options}
 */
tflite.NonMaxSuppressionV5Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NonMaxSuppressionV5Options=} obj
 * @returns {tflite.NonMaxSuppressionV5Options}
 */
tflite.NonMaxSuppressionV5Options.getRootAsNonMaxSuppressionV5Options = function(bb, obj) {
  return (obj || new tflite.NonMaxSuppressionV5Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.NonMaxSuppressionV5Options=} obj
 * @returns {tflite.NonMaxSuppressionV5Options}
 */
tflite.NonMaxSuppressionV5Options.getSizePrefixedRootAsNonMaxSuppressionV5Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.NonMaxSuppressionV5Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.NonMaxSuppressionV5Options.startNonMaxSuppressionV5Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NonMaxSuppressionV5Options.endNonMaxSuppressionV5Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.NonMaxSuppressionV5Options.createNonMaxSuppressionV5Options = function(builder) {
  tflite.NonMaxSuppressionV5Options.startNonMaxSuppressionV5Options(builder);
  return tflite.NonMaxSuppressionV5Options.endNonMaxSuppressionV5Options(builder);
}

/**
 * @constructor
 */
tflite.ScatterNdOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.ScatterNdOptions}
 */
tflite.ScatterNdOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ScatterNdOptions=} obj
 * @returns {tflite.ScatterNdOptions}
 */
tflite.ScatterNdOptions.getRootAsScatterNdOptions = function(bb, obj) {
  return (obj || new tflite.ScatterNdOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.ScatterNdOptions=} obj
 * @returns {tflite.ScatterNdOptions}
 */
tflite.ScatterNdOptions.getSizePrefixedRootAsScatterNdOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.ScatterNdOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.ScatterNdOptions.startScatterNdOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ScatterNdOptions.endScatterNdOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.ScatterNdOptions.createScatterNdOptions = function(builder) {
  tflite.ScatterNdOptions.startScatterNdOptions(builder);
  return tflite.ScatterNdOptions.endScatterNdOptions(builder);
}

/**
 * @constructor
 */
tflite.SelectV2Options = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SelectV2Options}
 */
tflite.SelectV2Options.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SelectV2Options=} obj
 * @returns {tflite.SelectV2Options}
 */
tflite.SelectV2Options.getRootAsSelectV2Options = function(bb, obj) {
  return (obj || new tflite.SelectV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SelectV2Options=} obj
 * @returns {tflite.SelectV2Options}
 */
tflite.SelectV2Options.getSizePrefixedRootAsSelectV2Options = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SelectV2Options).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SelectV2Options.startSelectV2Options = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SelectV2Options.endSelectV2Options = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SelectV2Options.createSelectV2Options = function(builder) {
  tflite.SelectV2Options.startSelectV2Options(builder);
  return tflite.SelectV2Options.endSelectV2Options(builder);
}

/**
 * @constructor
 */
tflite.DensifyOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.DensifyOptions}
 */
tflite.DensifyOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DensifyOptions=} obj
 * @returns {tflite.DensifyOptions}
 */
tflite.DensifyOptions.getRootAsDensifyOptions = function(bb, obj) {
  return (obj || new tflite.DensifyOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.DensifyOptions=} obj
 * @returns {tflite.DensifyOptions}
 */
tflite.DensifyOptions.getSizePrefixedRootAsDensifyOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.DensifyOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.DensifyOptions.startDensifyOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DensifyOptions.endDensifyOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.DensifyOptions.createDensifyOptions = function(builder) {
  tflite.DensifyOptions.startDensifyOptions(builder);
  return tflite.DensifyOptions.endDensifyOptions(builder);
}

/**
 * @constructor
 */
tflite.SegmentSumOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SegmentSumOptions}
 */
tflite.SegmentSumOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SegmentSumOptions=} obj
 * @returns {tflite.SegmentSumOptions}
 */
tflite.SegmentSumOptions.getRootAsSegmentSumOptions = function(bb, obj) {
  return (obj || new tflite.SegmentSumOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SegmentSumOptions=} obj
 * @returns {tflite.SegmentSumOptions}
 */
tflite.SegmentSumOptions.getSizePrefixedRootAsSegmentSumOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SegmentSumOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SegmentSumOptions.startSegmentSumOptions = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SegmentSumOptions.endSegmentSumOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SegmentSumOptions.createSegmentSumOptions = function(builder) {
  tflite.SegmentSumOptions.startSegmentSumOptions(builder);
  return tflite.SegmentSumOptions.endSegmentSumOptions(builder);
}

/**
 * @constructor
 */
tflite.BatchMatMulOptions = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.BatchMatMulOptions}
 */
tflite.BatchMatMulOptions.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BatchMatMulOptions=} obj
 * @returns {tflite.BatchMatMulOptions}
 */
tflite.BatchMatMulOptions.getRootAsBatchMatMulOptions = function(bb, obj) {
  return (obj || new tflite.BatchMatMulOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.BatchMatMulOptions=} obj
 * @returns {tflite.BatchMatMulOptions}
 */
tflite.BatchMatMulOptions.getSizePrefixedRootAsBatchMatMulOptions = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.BatchMatMulOptions).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
tflite.BatchMatMulOptions.prototype.adjX = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BatchMatMulOptions.prototype.mutate_adj_x = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @returns {boolean}
 */
tflite.BatchMatMulOptions.prototype.adjY = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
tflite.BatchMatMulOptions.prototype.mutate_adj_y = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.BatchMatMulOptions.startBatchMatMulOptions = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} adjX
 */
tflite.BatchMatMulOptions.addAdjX = function(builder, adjX) {
  builder.addFieldInt8(0, +adjX, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} adjY
 */
tflite.BatchMatMulOptions.addAdjY = function(builder, adjY) {
  builder.addFieldInt8(1, +adjY, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.BatchMatMulOptions.endBatchMatMulOptions = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} adjX
 * @param {boolean} adjY
 * @returns {flatbuffers.Offset}
 */
tflite.BatchMatMulOptions.createBatchMatMulOptions = function(builder, adjX, adjY) {
  tflite.BatchMatMulOptions.startBatchMatMulOptions(builder);
  tflite.BatchMatMulOptions.addAdjX(builder, adjX);
  tflite.BatchMatMulOptions.addAdjY(builder, adjY);
  return tflite.BatchMatMulOptions.endBatchMatMulOptions(builder);
}

/**
 * @constructor
 */
tflite.OperatorCode = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.OperatorCode}
 */
tflite.OperatorCode.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.OperatorCode=} obj
 * @returns {tflite.OperatorCode}
 */
tflite.OperatorCode.getRootAsOperatorCode = function(bb, obj) {
  return (obj || new tflite.OperatorCode).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.OperatorCode=} obj
 * @returns {tflite.OperatorCode}
 */
tflite.OperatorCode.getSizePrefixedRootAsOperatorCode = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.OperatorCode).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {tflite.BuiltinOperator}
 */
tflite.OperatorCode.prototype.builtinCode = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {tflite.BuiltinOperator} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.BuiltinOperator.ADD;
};

/**
 * @param {tflite.BuiltinOperator} value
 * @returns {boolean}
 */
tflite.OperatorCode.prototype.mutate_builtin_code = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
tflite.OperatorCode.prototype.customCode = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
tflite.OperatorCode.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.OperatorCode.prototype.mutate_version = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 8);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.OperatorCode.startOperatorCode = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.BuiltinOperator} builtinCode
 */
tflite.OperatorCode.addBuiltinCode = function(builder, builtinCode) {
  builder.addFieldInt8(0, builtinCode, tflite.BuiltinOperator.ADD);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} customCodeOffset
 */
tflite.OperatorCode.addCustomCode = function(builder, customCodeOffset) {
  builder.addFieldOffset(1, customCodeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
tflite.OperatorCode.addVersion = function(builder, version) {
  builder.addFieldInt32(2, version, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.OperatorCode.endOperatorCode = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.BuiltinOperator} builtinCode
 * @param {flatbuffers.Offset} customCodeOffset
 * @param {number} version
 * @returns {flatbuffers.Offset}
 */
tflite.OperatorCode.createOperatorCode = function(builder, builtinCode, customCodeOffset, version) {
  tflite.OperatorCode.startOperatorCode(builder);
  tflite.OperatorCode.addBuiltinCode(builder, builtinCode);
  tflite.OperatorCode.addCustomCode(builder, customCodeOffset);
  tflite.OperatorCode.addVersion(builder, version);
  return tflite.OperatorCode.endOperatorCode(builder);
}

/**
 * @constructor
 */
tflite.Operator = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Operator}
 */
tflite.Operator.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Operator=} obj
 * @returns {tflite.Operator}
 */
tflite.Operator.getRootAsOperator = function(bb, obj) {
  return (obj || new tflite.Operator).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Operator=} obj
 * @returns {tflite.Operator}
 */
tflite.Operator.getSizePrefixedRootAsOperator = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Operator).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.opcodeIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Operator.prototype.mutate_opcode_index = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Operator.prototype.inputs = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.inputsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Operator.prototype.inputsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Operator.prototype.outputs = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.outputsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Operator.prototype.outputsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {tflite.BuiltinOptions}
 */
tflite.Operator.prototype.builtinOptionsType = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? /** @type {tflite.BuiltinOptions} */ (this.bb.readUint8(this.bb_pos + offset)) : tflite.BuiltinOptions.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
tflite.Operator.prototype.builtinOptions = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Operator.prototype.customOptions = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.customOptionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
tflite.Operator.prototype.customOptionsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @returns {tflite.CustomOptionsFormat}
 */
tflite.Operator.prototype.customOptionsFormat = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? /** @type {tflite.CustomOptionsFormat} */ (this.bb.readInt8(this.bb_pos + offset)) : tflite.CustomOptionsFormat.FLEXBUFFERS;
};

/**
 * @param {tflite.CustomOptionsFormat} value
 * @returns {boolean}
 */
tflite.Operator.prototype.mutate_custom_options_format = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 16);

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @returns {boolean}
 */
tflite.Operator.prototype.mutatingVariableInputs = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? !!this.bb.readInt8(this.bb.__vector(this.bb_pos + offset) + index) : false;
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.mutatingVariableInputsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int8Array}
 */
tflite.Operator.prototype.mutatingVariableInputsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? new Int8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Operator.prototype.intermediates = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Operator.prototype.intermediatesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Operator.prototype.intermediatesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Operator.startOperator = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} opcodeIndex
 */
tflite.Operator.addOpcodeIndex = function(builder, opcodeIndex) {
  builder.addFieldInt32(0, opcodeIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputsOffset
 */
tflite.Operator.addInputs = function(builder, inputsOffset) {
  builder.addFieldOffset(1, inputsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createInputsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Operator.startInputsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputsOffset
 */
tflite.Operator.addOutputs = function(builder, outputsOffset) {
  builder.addFieldOffset(2, outputsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createOutputsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Operator.startOutputsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.BuiltinOptions} builtinOptionsType
 */
tflite.Operator.addBuiltinOptionsType = function(builder, builtinOptionsType) {
  builder.addFieldInt8(3, builtinOptionsType, tflite.BuiltinOptions.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} builtinOptionsOffset
 */
tflite.Operator.addBuiltinOptions = function(builder, builtinOptionsOffset) {
  builder.addFieldOffset(4, builtinOptionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} customOptionsOffset
 */
tflite.Operator.addCustomOptions = function(builder, customOptionsOffset) {
  builder.addFieldOffset(5, customOptionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createCustomOptionsVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Operator.startCustomOptionsVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {tflite.CustomOptionsFormat} customOptionsFormat
 */
tflite.Operator.addCustomOptionsFormat = function(builder, customOptionsFormat) {
  builder.addFieldInt8(6, customOptionsFormat, tflite.CustomOptionsFormat.FLEXBUFFERS);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} mutatingVariableInputsOffset
 */
tflite.Operator.addMutatingVariableInputs = function(builder, mutatingVariableInputsOffset) {
  builder.addFieldOffset(7, mutatingVariableInputsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<boolean>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createMutatingVariableInputsVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(+data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Operator.startMutatingVariableInputsVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} intermediatesOffset
 */
tflite.Operator.addIntermediates = function(builder, intermediatesOffset) {
  builder.addFieldOffset(8, intermediatesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createIntermediatesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Operator.startIntermediatesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.endOperator = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} opcodeIndex
 * @param {flatbuffers.Offset} inputsOffset
 * @param {flatbuffers.Offset} outputsOffset
 * @param {tflite.BuiltinOptions} builtinOptionsType
 * @param {flatbuffers.Offset} builtinOptionsOffset
 * @param {flatbuffers.Offset} customOptionsOffset
 * @param {tflite.CustomOptionsFormat} customOptionsFormat
 * @param {flatbuffers.Offset} mutatingVariableInputsOffset
 * @param {flatbuffers.Offset} intermediatesOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Operator.createOperator = function(builder, opcodeIndex, inputsOffset, outputsOffset, builtinOptionsType, builtinOptionsOffset, customOptionsOffset, customOptionsFormat, mutatingVariableInputsOffset, intermediatesOffset) {
  tflite.Operator.startOperator(builder);
  tflite.Operator.addOpcodeIndex(builder, opcodeIndex);
  tflite.Operator.addInputs(builder, inputsOffset);
  tflite.Operator.addOutputs(builder, outputsOffset);
  tflite.Operator.addBuiltinOptionsType(builder, builtinOptionsType);
  tflite.Operator.addBuiltinOptions(builder, builtinOptionsOffset);
  tflite.Operator.addCustomOptions(builder, customOptionsOffset);
  tflite.Operator.addCustomOptionsFormat(builder, customOptionsFormat);
  tflite.Operator.addMutatingVariableInputs(builder, mutatingVariableInputsOffset);
  tflite.Operator.addIntermediates(builder, intermediatesOffset);
  return tflite.Operator.endOperator(builder);
}

/**
 * @constructor
 */
tflite.SubGraph = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.SubGraph}
 */
tflite.SubGraph.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SubGraph=} obj
 * @returns {tflite.SubGraph}
 */
tflite.SubGraph.getRootAsSubGraph = function(bb, obj) {
  return (obj || new tflite.SubGraph).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.SubGraph=} obj
 * @returns {tflite.SubGraph}
 */
tflite.SubGraph.getSizePrefixedRootAsSubGraph = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.SubGraph).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {tflite.Tensor=} obj
 * @returns {tflite.Tensor}
 */
tflite.SubGraph.prototype.tensors = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new tflite.Tensor).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.SubGraph.prototype.tensorsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.SubGraph.prototype.inputs = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.SubGraph.prototype.inputsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.SubGraph.prototype.inputsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.SubGraph.prototype.outputs = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.SubGraph.prototype.outputsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.SubGraph.prototype.outputsArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {tflite.Operator=} obj
 * @returns {tflite.Operator}
 */
tflite.SubGraph.prototype.operators = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new tflite.Operator).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.SubGraph.prototype.operatorsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
tflite.SubGraph.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.SubGraph.startSubGraph = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tensorsOffset
 */
tflite.SubGraph.addTensors = function(builder, tensorsOffset) {
  builder.addFieldOffset(0, tensorsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.createTensorsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SubGraph.startTensorsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inputsOffset
 */
tflite.SubGraph.addInputs = function(builder, inputsOffset) {
  builder.addFieldOffset(1, inputsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.createInputsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SubGraph.startInputsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} outputsOffset
 */
tflite.SubGraph.addOutputs = function(builder, outputsOffset) {
  builder.addFieldOffset(2, outputsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.createOutputsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SubGraph.startOutputsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} operatorsOffset
 */
tflite.SubGraph.addOperators = function(builder, operatorsOffset) {
  builder.addFieldOffset(3, operatorsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.createOperatorsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.SubGraph.startOperatorsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
tflite.SubGraph.addName = function(builder, nameOffset) {
  builder.addFieldOffset(4, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.endSubGraph = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} tensorsOffset
 * @param {flatbuffers.Offset} inputsOffset
 * @param {flatbuffers.Offset} outputsOffset
 * @param {flatbuffers.Offset} operatorsOffset
 * @param {flatbuffers.Offset} nameOffset
 * @returns {flatbuffers.Offset}
 */
tflite.SubGraph.createSubGraph = function(builder, tensorsOffset, inputsOffset, outputsOffset, operatorsOffset, nameOffset) {
  tflite.SubGraph.startSubGraph(builder);
  tflite.SubGraph.addTensors(builder, tensorsOffset);
  tflite.SubGraph.addInputs(builder, inputsOffset);
  tflite.SubGraph.addOutputs(builder, outputsOffset);
  tflite.SubGraph.addOperators(builder, operatorsOffset);
  tflite.SubGraph.addName(builder, nameOffset);
  return tflite.SubGraph.endSubGraph(builder);
}

/**
 * @constructor
 */
tflite.Buffer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Buffer}
 */
tflite.Buffer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Buffer=} obj
 * @returns {tflite.Buffer}
 */
tflite.Buffer.getRootAsBuffer = function(bb, obj) {
  return (obj || new tflite.Buffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Buffer=} obj
 * @returns {tflite.Buffer}
 */
tflite.Buffer.getSizePrefixedRootAsBuffer = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Buffer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Buffer.prototype.data = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
tflite.Buffer.prototype.dataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
tflite.Buffer.prototype.dataArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Buffer.startBuffer = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
tflite.Buffer.addData = function(builder, dataOffset) {
  builder.addFieldOffset(0, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Buffer.createDataVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Buffer.startDataVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Buffer.endBuffer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Buffer.createBuffer = function(builder, dataOffset) {
  tflite.Buffer.startBuffer(builder);
  tflite.Buffer.addData(builder, dataOffset);
  return tflite.Buffer.endBuffer(builder);
}

/**
 * @constructor
 */
tflite.Metadata = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Metadata}
 */
tflite.Metadata.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Metadata=} obj
 * @returns {tflite.Metadata}
 */
tflite.Metadata.getRootAsMetadata = function(bb, obj) {
  return (obj || new tflite.Metadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Metadata=} obj
 * @returns {tflite.Metadata}
 */
tflite.Metadata.getSizePrefixedRootAsMetadata = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Metadata).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
tflite.Metadata.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
tflite.Metadata.prototype.buffer = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Metadata.prototype.mutate_buffer = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Metadata.startMetadata = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
tflite.Metadata.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} buffer
 */
tflite.Metadata.addBuffer = function(builder, buffer) {
  builder.addFieldInt32(1, buffer, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Metadata.endMetadata = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 * @param {number} buffer
 * @returns {flatbuffers.Offset}
 */
tflite.Metadata.createMetadata = function(builder, nameOffset, buffer) {
  tflite.Metadata.startMetadata(builder);
  tflite.Metadata.addName(builder, nameOffset);
  tflite.Metadata.addBuffer(builder, buffer);
  return tflite.Metadata.endMetadata(builder);
}

/**
 * @constructor
 */
tflite.Model = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {tflite.Model}
 */
tflite.Model.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Model=} obj
 * @returns {tflite.Model}
 */
tflite.Model.getRootAsModel = function(bb, obj) {
  return (obj || new tflite.Model).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {tflite.Model=} obj
 * @returns {tflite.Model}
 */
tflite.Model.getSizePrefixedRootAsModel = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new tflite.Model).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
tflite.Model.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('TFL3');
};

/**
 * @returns {number}
 */
tflite.Model.prototype.version = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
tflite.Model.prototype.mutate_version = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
};

/**
 * @param {number} index
 * @param {tflite.OperatorCode=} obj
 * @returns {tflite.OperatorCode}
 */
tflite.Model.prototype.operatorCodes = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new tflite.OperatorCode).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.Model.prototype.operatorCodesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {tflite.SubGraph=} obj
 * @returns {tflite.SubGraph}
 */
tflite.Model.prototype.subgraphs = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new tflite.SubGraph).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.Model.prototype.subgraphsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
tflite.Model.prototype.description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {tflite.Buffer=} obj
 * @returns {tflite.Buffer}
 */
tflite.Model.prototype.buffers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new tflite.Buffer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.Model.prototype.buffersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
tflite.Model.prototype.metadataBuffer = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
};

/**
 * @returns {number}
 */
tflite.Model.prototype.metadataBufferLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Int32Array}
 */
tflite.Model.prototype.metadataBufferArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {number} index
 * @param {tflite.Metadata=} obj
 * @returns {tflite.Metadata}
 */
tflite.Model.prototype.metadata = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new tflite.Metadata).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
tflite.Model.prototype.metadataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
tflite.Model.startModel = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 */
tflite.Model.addVersion = function(builder, version) {
  builder.addFieldInt32(0, version, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} operatorCodesOffset
 */
tflite.Model.addOperatorCodes = function(builder, operatorCodesOffset) {
  builder.addFieldOffset(1, operatorCodesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createOperatorCodesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Model.startOperatorCodesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} subgraphsOffset
 */
tflite.Model.addSubgraphs = function(builder, subgraphsOffset) {
  builder.addFieldOffset(2, subgraphsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createSubgraphsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Model.startSubgraphsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} descriptionOffset
 */
tflite.Model.addDescription = function(builder, descriptionOffset) {
  builder.addFieldOffset(3, descriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} buffersOffset
 */
tflite.Model.addBuffers = function(builder, buffersOffset) {
  builder.addFieldOffset(4, buffersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createBuffersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Model.startBuffersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} metadataBufferOffset
 */
tflite.Model.addMetadataBuffer = function(builder, metadataBufferOffset) {
  builder.addFieldOffset(5, metadataBufferOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createMetadataBufferVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt32(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Model.startMetadataBufferVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} metadataOffset
 */
tflite.Model.addMetadata = function(builder, metadataOffset) {
  builder.addFieldOffset(6, metadataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createMetadataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
tflite.Model.startMetadataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
tflite.Model.endModel = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
tflite.Model.finishModelBuffer = function(builder, offset) {
  builder.finish(offset, 'TFL3');
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
tflite.Model.finishSizePrefixedModelBuffer = function(builder, offset) {
  builder.finish(offset, 'TFL3', true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} version
 * @param {flatbuffers.Offset} operatorCodesOffset
 * @param {flatbuffers.Offset} subgraphsOffset
 * @param {flatbuffers.Offset} descriptionOffset
 * @param {flatbuffers.Offset} buffersOffset
 * @param {flatbuffers.Offset} metadataBufferOffset
 * @param {flatbuffers.Offset} metadataOffset
 * @returns {flatbuffers.Offset}
 */
tflite.Model.createModel = function(builder, version, operatorCodesOffset, subgraphsOffset, descriptionOffset, buffersOffset, metadataBufferOffset, metadataOffset) {
  tflite.Model.startModel(builder);
  tflite.Model.addVersion(builder, version);
  tflite.Model.addOperatorCodes(builder, operatorCodesOffset);
  tflite.Model.addSubgraphs(builder, subgraphsOffset);
  tflite.Model.addDescription(builder, descriptionOffset);
  tflite.Model.addBuffers(builder, buffersOffset);
  tflite.Model.addMetadataBuffer(builder, metadataBufferOffset);
  tflite.Model.addMetadata(builder, metadataOffset);
  return tflite.Model.endModel(builder);
}

// Exports for Node.js and RequireJS
this.tflite = tflite;
